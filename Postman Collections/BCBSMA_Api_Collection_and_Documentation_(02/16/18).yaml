swagger: '2.0'
info:
  version: '1.0'
  title: BCBSMA Api Collection and Documentation (02/16/18)
  description: "| Ver |    Date    |Author| Description \n|-----|------------|------|------------\n| 1.0 | 07-21-2017 | Sri Narasimhan and Robert DiRamio |Initial draft. Doc includes Get tokens API and Register Member API.\n| 1.1 | 07-31-2017 | Sri Narasimhan |Updated Register Member API. Added Verify Member API.\n| 1.2 | 08-09-2017 | Sri Narasimhan |Register Member API  modified based on the updated business requirements on 08/01/2017. Removed Verify Member API as it is no longer needed.\n| 1.3 | 08-14-2017 | Sri Narasimhan |Added Member login API\n| 1.4 | 08-16-2017 | Sri Narasimhan |Updated Member login API to address new base path and versioning of API. Added Sendaccesscode API\n| 1.5 | 08-23-2017 | Sri Narasimhan |Updated base path of existing API to address versioning of API. Added updatememauthinfo, getmemauthinfo and verifyaccesscode API.\n| 1.6 | 08-28-2017 | Sri Narasimhan and Robert DiRamio |Added authwithssn API\n| 2.0 | 09-06-2017 | Sri Narasimhan and Robert DiRamio |Updated new Encryption Algorithm/mode and padding as per the request from Client application team to support security features using Javascript\n| 2.1 | 09-19-2017 | Sri Narasimhan and Robert DiRamio |7 new APIs added.  getcardfront, getcardback, getrecentvisits, getrecentrx, getdependentlist, getclaims and getmemberinfo\n| 2.2 | 09-25-2017 | Sri Narasimhan and Robert DiRamio |Response refactored for getmemberinfo\n| 2.3 | 10-05-2017 | Sri Narasimhan and Robert DiRamio |See Mem Info folder (getlimitedplaninfo, getmemprofile, getmempreference), Claims Info folder all new, Depclaims Info folder all new,  Dep Mem Info folder all new, Update Profile folder all new, Update Preference folder all new.\n| 2.4 | 10-26-2017 | Sri Narasimhan and Bob DiRamio |memlogin has been enhanced to support MyBlue Website credentials. Users can now login with their existing user name and password.  changepassword has been added to allow a logged in user to change their password.  logout has been added to invalidate the OAUTH2 token and terminate the session.  refreshtoken has been added to refresh an existing OAUTH2 token.  Various defects have been fixed and support for CORS header responses for all applicable apis has been added.  authwithssn has been modified to allow 'X' in place of any 5 digits in the Social Security Number.\n| 2.5 | 11-02-2017 | Sri Narasimhan and Bob DiRamio | getfinancialbalance returns Alegeus (algmsg) and, or Health Equity (heqmsg) account balance summaries when a member has the appropriate Financial Services company.  getalerts returns Data Warehouse generated alerts for the logged in member or spouse.\n| 2.6 | 11-16-2017 | Sri Narasimhan and Bob DiRamio | 3 Forgot Password Apis Folder \"Forgot Password Verify User\"/member/v1/access/verifyuser.  Folder \"Forgot Password Verify Acc Code & Reset Password\" /member/v1/access/verifyresetac and member/v1/access/resetpassword.  All password related apis now allow special characters in the password. Oauth access token expiry extended to 20 minutes.  Defect fixes\n| 3.0 | 02/09/18 | Api Team | registermem now supports registration with mobile phone # as a user id.  The regtypein of the registermem request should be set to 'MOBILE'.  sendaccesscode now with send the 6 digit access code based on regtypein during registration.  When regtypein = MOBILE, access code will be sent via SMS.  When regtypein = EMAIL, access code will be sent via Email.\n| 3.1 | 02/16/18 | Api Team | Forgot User name.  two new apis. member/v1/access/verifyfunuser takes either or both mobile # and email address.  Returns the registration type found (MOBILE/EMAIL) and returns an indicator if the user is Authenticated. If the user is not Authenticated, then the user name is either SMS'd or emailed.   member/v1/access/verifyfunauthuser takes the Authenticated user id and the Date of Birth. If DOB matches what was enteres during Authentication, then the user name is either SMS or Emailed.\n\n# This collection uses csv files to drive each folder (scenarios) below.\n\n15 Collection Folders as follows:\n\n## Registration \n  - Registers given users in csv.\n  - Gettokens, registrationEncrypt, registermem\n  > Uses Registration.csv\n\n## Login \n  - Logs in with given users in the csv.\n  - Gettokens, loginEncrypt, memberlogin\n  > Uses Login.csv\n\n## Login Change Password Logout\n  - Logs in with given users in the csv file\n  - Changes password from currentpassword to newpassword\n  - Logsout\n\n## Refresh Token\n  - Logs in with a user who has to be Authenticated and Verified\n  - Refreshes the token\n  - Used the access Token from the refresh to call getcardfront\n\n## Reg and Send Access Code\n  - Registers, logs in and sends access code\n  - Gettokens, regisrationEncrypt, registermem, loginEncrypt, memberlogin, sendaccesscodeEncrypt, sendaccesscode\n  > Uses Registration.csv\n\n## Send Access Code Only\n  - Logs in (does not register) and Sends Access Code for given users in csv.\n  - Gettokens, loginEncrypt, memberlogin, sendaccesscodeEncrypt, sendaccesscode\n  - 02/09/18 - sendaccess code now supports sending either via Email or SMS\n  > Uses Login.csv\n\n## Verify Access Code \n  - Verifies access code for given users in csv - logs in a second time to ensure scope has changed to AND_VERIFIED.\n  - Gettokens, loginEncrypt, memberlogin, verifyaccesscodeEncrypt, verifyaccesscode, loginEncrypt2, memberlogin2\n  > Uses VerifyAccessCode.csv (you'll need to put in the access codes)\n\n## Update Mem Auth Entry \n  - Logs in, updates mem auth entry for all steps including authwithssn, logs in again for given users in csv.\n  - Gettokens, loginEncrypt, memberlogin, updatememauthEncrypt1 (), updatememauthinfo1 (), updatememauthinfoEncrypt2\n  > Uses MemAuthEntry.csv\n\n## Mem Info \n   Logs in (scope should be ACTIVE-AUTHENTICATED-AND-VERIFIED), getcardfront, getcardback, getrecentvisits, getrecentrx, getclaims, getdependentlist, getmeminfo and decrypts response for given users in csv.\n  - Gettokens, loginEncrypt, memberlogin, meminfoEncrypt, getcardfront, getcardback, getrecentvisits, getrecentrx, getclaims, getdependentlist, getmeminfo, getlimitedplaninfo, getmemprofile, getmempreference, getfinancialbalance, getalerts\n  > Uses LoginAV.csv\n\n## Claims Info \n  - Logs in (scope should be ACTIVE-AUTHENTICATED-AND-VERIFIED) and for the logged in member, getclaims, getclaimsfordaterange (01/01/2017-12/31/2017), getclaimsforICN, getclaimsforprovider.\n  - Gettokens, memlogin, getclaims, getclaimsforprovider, getclaimsfordaterange, getclaimsforICN\n  > Uses LoginClmICNProv.csv file\n\n## Depclaims Info \n  - Logs in (scope should be ACTIVE-AUTHENTICATED-AND-VERIFIED) and for the logged in member and calls these for the depID in the file, getdepclaims, getdepclaimsfordaterange (01/01/2017-12/31/2017), getdepclaimsforICN, getdepclaimsforprovider.\n  - Gettokens, memlogin, getdepclaims, getdepclaimsfordaterange, getdepclaimsforICN, getdepclaimsforprovider\n  > Uses DepLoginClmICNProvWithDepID.csv file\n\n## Dep Info \n  - Logs in (scope should be ACTIVE-AUTHENTICATED-AND-VERIFIED) and for the logged in member and calls these for the depID in the file, getdepcardinfo, getdepcardback, getdeprecentvisits, getdeprecentrx, getdepmemberinfo, getdeplimitedplaninfo.\n  - Gettokens, getdepcardinfo, getdepcardback, getdeprecentvisits, getdeprecentrx, getdepmemberinfo, getdeplimitedplaninfo\n  > Uses DepLoginClmICNProvWithDepID.csv file\n\n## Update Profile \n  - Logs in (scope should be ACTIVE-AUTHENTICATED-AND-VERIFIED) and for the logged in user/member updates the user profile with some test key/value pairs.\n  - Gettokens, memlogin, updatememprofile, getmemprofile\n  > Uses LoginAV.csv file\n\n## Update Preference \n  - Logs in (scope should be ACTIVE-AUTHENTICATED-AND-VERIFIED) and for the logged in user/member updates the user preferences with some test key/value pairs.\n  - Gettokens, memlogin, updatemempreference, getmempreference\n  > Uses LoginAV.csv file\n\n## Forgot Password Verify User \n  - (Step 1 in Forgot Password flow) /member/v1/access/verifyuser.\n\n## Forgot Password Verify Access Code and Reset Password\n  - (Steps 2 and 3 in the Forgot Password flow) /member/v1/access/verifyresetac and /member/v1/access/resetpassword\n\n### Note:  open the Postman Console before running (View>Show Postman Console) to get the decrypted json responses from each request when available."
host: DefaultParameterValue
basePath: /DefaultParameterValue/mobilekeyservice/v1
securityDefinitions:
  auth:
    type: oauth2
    flow: implicit
    authorizationUrl: https://DefaultParameterValue/DefaultParameterValue/mobilekeyservice/v1
    scopes: {}
    x-skip-client-authentication: false
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /gettokens:
    get:
      description: "This API is used as a first step during registration and login operation. Any parameter that includes Personal Identifiable Information (PII) or Personal Health Information (PHI) either in the request or in the response cannot be sent using clear text format. This API is used for getting two separate encryption key parameters and their Ids at the client application. The key parameters are used for generating the actual key at the client application. One key is used for encrypting request parameters and the second key is used for decrypting response parameters. \n\nResponse Definition:\nresult  zero indicates a valid response  any negative number indicates an error condition\n\nkey1id  Request encryption key id (use this as a clear attribute in the request body (see register member API for example)\n\nkey1 salt  Request encryption Salt value to be used when generating the request key  \n\n\nkey1 iv  Request encryption Initialization Vector (IV) value to be used when encrypting the clear text message using request key.\n\nkey1 phrase  Request encryption passphrase value to be used when generating the request key  \n\nkey2id  Response decryption key id (put this in the put this in the message body of the request if response contains any PII or PHI data) should be encrypted with the request body. \n\n Key2 salt  Response encryption Salt value to be used when generating the Response key  \n\nKey2 iv  Response decryption Initialization Vector (IV) value to be used when decrypting the encrypted response message using response key.\n\nKey2 phrase  Response decryption passphrase value to be used when generating the response key  \n"
      summary: GetTokens copy
      tags:
      - Forgot Password Verify Acc Code & Reset Password
      operationId: GettokensGet21
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetTokens'
          examples:
            application/json:
              result: 0
              key1id: 4572ceadc6414b4ab05b4bfb5e529cd6
              key1salt: ba59245803972f0f9d537a9327c82b224abb638b66e4247eb4541761e75af0a2
              key1iv: 42be0697ee13b7bb8295206993bcbb34
              key1phrase: 9f1df9d57bfd4e48a6504207e307b568
              key2id: d496f41c36ef46faaa5d82f0dc18d63a
              key2salt: 997fe31ec80c3ae6d043c5b1d06724837f008934df5a31ff7c1218e51f70395e
              key2iv: e92f914619080c3c366d50859786903c
              key2phrase: e25d9918054b486284a5e3167b695176
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /gettokens
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Set-Cookie: NSC_MCWt-Npcjmfnfncfstubhf=ffffffff09dad72245525d5f4f58455e445a4a42378b;Version=1;Max-Age=43200;path=/;secure;httponly
            content-length: 442
            content-type: application/json; charset=utf-8
            date: Thu, 05 Oct 2017 19:58:10 GMT
            p3p: CP="NON CUR OTPi OUR NOR UNI"
            server: Apache-Coyote/1.1
          body: '{"result":"0","key1id":"4572ceadc6414b4ab05b4bfb5e529cd6","key1salt":"ba59245803972f0f9d537a9327c82b224abb638b66e4247eb4541761e75af0a2","key1iv":"42be0697ee13b7bb8295206993bcbb34","key1phrase":"9f1df9d57bfd4e48a6504207e307b568","key2id":"d496f41c36ef46faaa5d82f0dc18d63a","key2salt":"997fe31ec80c3ae6d043c5b1d06724837f008934df5a31ff7c1218e51f70395e","key2iv":"e92f914619080c3c366d50859786903c","key2phrase":"e25d9918054b486284a5e3167b695176"}'
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: GetTokens copy
        x-testDescription: "This API is used as a first step during registration and login operation. Any parameter that includes Personal Identifiable Information (PII) or Personal Health Information (PHI) either in the request or in the response cannot be sent using clear text format. This API is used for getting two separate encryption key parameters and their Ids at the client application. The key parameters are used for generating the actual key at the client application. One key is used for encrypting request parameters and the second key is used for decrypting response parameters. \n\nResponse Definition:\nresult  zero indicates a valid response  any negative number indicates an error condition\n\nkey1id  Request encryption key id (use this as a clear attribute in the request body (see register member API for example)\n\nkey1 salt  Request encryption Salt value to be used when generating the request key  \n\n\nkey1 iv  Request encryption Initialization Vector (IV) value to be used when encrypting the clear text message using request key.\n\nkey1 phrase  Request encryption passphrase value to be used when generating the request key  \n\nkey2id  Response decryption key id (put this in the put this in the message body of the request if response contains any PII or PHI data) should be encrypted with the request body. \n\n Key2 salt  Response encryption Salt value to be used when generating the Response key  \n\nKey2 iv  Response decryption Initialization Vector (IV) value to be used when decrypting the encrypted response message using response key.\n\nKey2 phrase  Response decryption passphrase value to be used when generating the response key  \n"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cryptohelpers/v1/clientencryption:
    post:
      description: Encrypts the request body
      summary: resetPasswordEncrypt
      tags:
      - Forgot Password Verify Acc Code & Reset Password
      operationId: CryptohelpersV1ClientencryptionPost49
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ResetPasswordEncryptRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /cryptohelpers/v1/clientencryption
          headers:
            Content-Type: application/json
          body: '{"mesg":"{\"useridin\":\"{{userid}}\",\"passwordin\":\"{{password}}\",\"key2id\":\"{{Ekey2id}}\"}","key1id":"{{Ekey1id}}"}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: resetPasswordEncrypt
        x-testDescription: Encrypts the request body
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/registermem:
    post:
      description: This API is used during the Registration flow of the application. The member provides mobile number or email address during registration. The user gets registered in the security system and a success message is returned if successful. The state of the user is changed from Anonymous user to REGISTERED-NOT-VERIFIED . If the user is already registered (verified) or already authenticated (validated with their BlueCross Insurance member details), they will get an error message.
      summary: registermem
      tags:
      - Reg and Send Access Code
      operationId: MemberV1AccessRegistermemPost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RegistermemOkResponse'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/registermem
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: registermem
        x-testDescription: This API is used during the Registration flow of the application. The member provides mobile number or email address during registration. The user gets registered in the security system and a success message is returned if successful. The state of the user is changed from Anonymous user to REGISTERED-NOT-VERIFIED . If the user is already registered (verified) or already authenticated (validated with their BlueCross Insurance member details), they will get an error message.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/memberlogin:
    post:
      description: >-
        This API is used for member to login into member application. The member provides username and password. The details are checked at the backend system and if they are valid, they would get back a OAUTH token with appropriate permissions to access other APIs based on the user state. The normal response for this api is the user's scope, an access_token, refresh_token and timestampes for token lifecycle.


        10/26/17 Update:

        memberlogin has been enhanced to allow users from the SunOne LDAP (Member Portal MyBlue Website) to login using their Website credentials.  During their first login, their account will be migreated to the ISAM MOBAUTH LDAP instance.
      summary: memberlogin
      tags:
      - Forgot Password Verify Acc Code & Reset Password
      operationId: MemberV1AccessMemberloginPost19
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/MemberloginOkResponse'
          examples:
            application/json:
              scopename: ACTIVE-AUTHENTICATED-AND-VERIFIED
              access_token: vAGFPKQcIF9RGO6acmTaWnOgMIO1
              refresh_token: UBsKDgxAPNJ8UOjRqvm5lGKTo22A2brb
              issued: 2017-Oct-05T19:48:59.665+00:00
              access_token_expires: 2017-Oct-05T19:58:58.665+00:00
              refresh_token_expires: 2017-Oct-05T19:48:59.665+00:00
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/memberlogin
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "scopename": "ACTIVE-AUTHENTICATED-AND-VERIFIED",
                "access_token": "vAGFPKQcIF9RGO6acmTaWnOgMIO1",
                "refresh_token": "UBsKDgxAPNJ8UOjRqvm5lGKTo22A2brb",
                "issued": "2017-Oct-05T19:48:59.665+00:00",
                "access_token_expires": "2017-Oct-05T19:58:58.665+00:00",
                "refresh_token_expires": "2017-Oct-05T19:48:59.665+00:00"
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: memberlogin
        x-testDescription: >-
          This API is used for member to login into member application. The member provides username and password. The details are checked at the backend system and if they are valid, they would get back a OAUTH token with appropriate permissions to access other APIs based on the user state. The normal response for this api is the user's scope, an access_token, refresh_token and timestampes for token lifecycle.


          10/26/17 Update:

          memberlogin has been enhanced to allow users from the SunOne LDAP (Member Portal MyBlue Website) to login using their Website credentials.  During their first login, their account will be migreated to the ISAM MOBAUTH LDAP instance.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/logout:
    post:
      description: This API is used for invalidating the OAUTH2 token.  It essentially ends the session and the user will have to login again to establish a new session and be provided with a new OAUTH2 token.
      summary: logout
      tags:
      - Login Change Password Logout
      operationId: MemberV1AccessLogoutPost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/MemberloginOkResponse'
          examples:
            application/json:
              scopename: ACTIVE-AUTHENTICATED-AND-VERIFIED
              access_token: vAGFPKQcIF9RGO6acmTaWnOgMIO1
              refresh_token: UBsKDgxAPNJ8UOjRqvm5lGKTo22A2brb
              issued: 2017-Oct-05T19:48:59.665+00:00
              access_token_expires: 2017-Oct-05T19:58:58.665+00:00
              refresh_token_expires: 2017-Oct-05T19:48:59.665+00:00
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/logout
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "scopename": "ACTIVE-AUTHENTICATED-AND-VERIFIED",
                "access_token": "vAGFPKQcIF9RGO6acmTaWnOgMIO1",
                "refresh_token": "UBsKDgxAPNJ8UOjRqvm5lGKTo22A2brb",
                "issued": "2017-Oct-05T19:48:59.665+00:00",
                "access_token_expires": "2017-Oct-05T19:58:58.665+00:00",
                "refresh_token_expires": "2017-Oct-05T19:48:59.665+00:00"
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: logout
        x-testDescription: This API is used for invalidating the OAUTH2 token.  It essentially ends the session and the user will have to login again to establish a new session and be provided with a new OAUTH2 token.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/changepassword:
    post:
      description: 'This API is used to change a password for a logged in user. It requires a valid OAUTH token, user id, current password, new password. '
      summary: changePassword
      tags:
      - Login Change Password Logout
      operationId: MemberV1InfoChangepasswordPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/MemberloginOkResponse12'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/changepassword
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: changePassword
        x-testDescription: 'This API is used to change a password for a logged in user. It requires a valid OAUTH token, user id, current password, new password. '
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/refreshtoken:
    post:
      description: >
        Used to refresh the access_token.

        Request body is url encoded with the following key/values

        grant_type = refresh_token

        refresh_token = {{refresh token from login response}}


        Response is the same as login with new access_token
      summary: refreshtoken
      tags:
      - Refresh Token
      operationId: MemberV1AccessRefreshtokenPost
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: grant_type
        in: formData
        required: true
        type: string
        description: ''
      - name: refresh_token
        in: formData
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Refreshtoken'
          examples:
            application/json:
              scopename: ACTIVE-AUTHENTICATED-AND-VERIFIED
              refresh_count: 1
              access_token: a3Po81MzuXq1JSuv8kE13V289GKR
              refresh_token: d6944yLuFyqoexbioXAmtE6b7HsPlKr6
              issued: 2017-Nov-09T14:37:26.552+00:00
              access_token_expires: 2017-Nov-09T14:47:25.552+00:00
              refresh_token_expires: 2017-Nov-09T15:07:25.552+00:00
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/refreshtoken
          headers:
            Content-Type: application/x-www-form-urlencoded
            Authorization: Bearer {{loginAccessToken}}
          body: grant_type=refresh_token&refresh_token={{refreshToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "scopename": "ACTIVE-AUTHENTICATED-AND-VERIFIED",
                "refresh_count": "1",
                "access_token": "a3Po81MzuXq1JSuv8kE13V289GKR",
                "refresh_token": "d6944yLuFyqoexbioXAmtE6b7HsPlKr6",
                "issued": "2017-Nov-09T14:37:26.552+00:00",
                "access_token_expires": "2017-Nov-09T14:47:25.552+00:00",
                "refresh_token_expires": "2017-Nov-09T15:07:25.552+00:00"
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: refreshtoken
        x-testDescription: >
          Used to refresh the access_token.

          Request body is url encoded with the following key/values

          grant_type = refresh_token

          refresh_token = {{refresh token from login response}}


          Response is the same as login with new access_token
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getcardfront:
    post:
      description: 'TODO: Add Description'
      summary: getcardfront
      tags:
      - Card Front  Dependent List
      operationId: MemberV1InfoGetcardfrontPost3
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetcardfrontOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  PCPPh: 978-269-0030
                  nurseLine: 1-888-247-2583
                  RowNum: 1
                  CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
                  isDependent: false
                  hasHEQ: false
                  hasALG: false
                  BHCopay: 15
                  dispSuitcase: true
                  PCPState: MA
                  rxBin: 'RxBin: 003858 PCN: A4'
                  PCPZip: 1810
                  MemName: BRIAN TTECDE
                  ERCopay: 50
                  MemServPh: 1-800-238-6616
                  PCPSpecified: true
                  PCPStreet: 140 HAVERHILL ST
                  cardMemID: XXH99902462
                  ProdDesc: BLUE CHOICE PLAN 2
                  OvCopay: 20/15
                  hasFAD: true
                  PCPName: PRATHIMA CHALOORI
                  rxSpecified: true
                  addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
                  PCPCity: ANDOVER
                  FADNetID: 311005011
                  rxGRP: 'RxGRP: MASA'
                  PrevCopay: 0
                  hasDependents: false
                  MemSuff: 11
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getcardfront
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "ROWSET": {
                    "ROWS": {
                        "PCPPh": "978-269-0030",
                        "nurseLine": "1-888-247-2583",
                        "RowNum": 1,
                        "CopayInfo": "Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.",
                        "isDependent": false,
                        "hasHEQ": false,
                        "hasALG": false,
                        "BHCopay": 15,
                        "dispSuitcase": true,
                        "PCPState": "MA",
                        "rxBin": "RxBin: 003858 PCN: A4",
                        "PCPZip": 1810,
                        "MemName": "BRIAN TTECDE",
                        "ERCopay": 50,
                        "MemServPh": "1-800-238-6616",
                        "PCPSpecified": true,
                        "PCPStreet": "140 HAVERHILL ST",
                        "cardMemID": "XXH99902462",
                        "ProdDesc": "BLUE CHOICE PLAN 2",
                        "OvCopay": "20/15",
                        "hasFAD": true,
                        "PCPName": "PRATHIMA CHALOORI",
                        "rxSpecified": true,
                        "addressStr": "140 HAVERHILL ST, ANDOVER MA 01810",
                        "PCPCity": "ANDOVER",
                        "FADNetID": 311005011,
                        "rxGRP": "RxGRP: MASA",
                        "PrevCopay": 0,
                        "hasDependents": false,
                        "MemSuff": 11
                    },
                    "totRows": 1
                }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getcardfront
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /clientsidedecryption:
    post:
      description: 'TODO: Add Description'
      summary: infoDecrypt
      tags:
      - Card Front  Dependent List
      operationId: ClientsidedecryptionPost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/InfoDecryptRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: autho
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /clientsidedecryption
          headers:
            Content-Type: application/json
            autho: Bearer {{loginAccessToken}}
          body: >-
            {
                "message": "{{encResp}}",
                "key2id":"{{Ekey2id}}"
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: infoDecrypt
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/registration/sendaccesscode:
    post:
      description: This sends an access code (via email for this release) to the user email address given.
      summary: sendaccesscode
      tags:
      - Update Mem Auth Entry
      operationId: MemberV1RegistrationSendaccesscodePost3
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/registration/sendaccesscode
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: sendaccesscode
        x-testDescription: This sends an access code (via email for this release) to the user email address given.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/registration/verifyaccesscode:
    post:
      description: This sends an access code (via email for this release) to the user email address given.
      summary: verifyaccesscode
      tags:
      - Verify Access Code
      operationId: MemberV1RegistrationVerifyaccesscodePost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Verifyaccesscode'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/registration/verifyaccesscode
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: verifyaccesscode
        x-testDescription: This sends an access code (via email for this release) to the user email address given.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/registration/updatememauthinfo:
    post:
      description: Updates the Member's Authentication information in the two Authentication steps which include Member Info (no ssn)
      summary: updatememauthinfo2
      tags:
      - Update Mem Auth Entry
      operationId: MemberV1RegistrationUpdatememauthinfoPost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/UpdatememauthinfoOkResponse'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/registration/updatememauthinfo
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: updatememauthinfo2
        x-testDescription: Updates the Member's Authentication information in the two Authentication steps which include Member Info (no ssn)
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/registration/getmemauthinfo:
    post:
      description: Retrieves the Member Authentication information given by this user (via updatememauthinfo)
      summary: getmemauthinfo
      tags:
      - getmemauthinfo Only
      operationId: MemberV1RegistrationGetmemauthinfoPost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetmemauthinfoOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  lastName: FASIFITLIETTECDE
                  lastAuthResult: 0,
                  recCreateTS: 06-OCT-17 05.53.06.795115 AM
                  DOB: 01/22/1989
                  memNum: XXH008302462
                  userID: bdtest10061051@test.com
                  authAttemptCnt: 1
                  mobilePhone: 6172468219
                  authAllowed: true
                  recUpdateTS: 06-OCT-17 06.25.11.417625 AM
                  firstName: BRIAN
                  rowNum: 1
                  emailAdd: myotherEmail@test.com
                  memSuffix: 11
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/registration/getmemauthinfo
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "ROWSET": {
                    "ROWS": {
                        "lastName": "FASIFITLIETTECDE",
                        "lastAuthResult": "0,",
                        "recCreateTS": "06-OCT-17 05.53.06.795115 AM",
                        "DOB": "01/22/1989",
                        "memNum": "XXH008302462",
                        "userID": "bdtest10061051@test.com",
                        "authAttemptCnt": 1,
                        "mobilePhone": 6172468219,
                        "authAllowed": true,
                        "recUpdateTS": "06-OCT-17 06.25.11.417625 AM",
                        "firstName": "BRIAN",
                        "rowNum": 1,
                        "emailAdd": "myotherEmail@test.com",
                        "memSuffix": 11
                    },
                    "totRows": 1
                }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getmemauthinfo
        x-testDescription: Retrieves the Member Authentication information given by this user (via updatememauthinfo)
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cryptohelpers/v1/clientdecryption:
    post:
      description: 'TODO: Add Description'
      summary: infoDecrypt
      tags:
      - Update Preference
      operationId: CryptohelpersV1ClientdecryptionPost9
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/InfoDecryptRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: autho
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /cryptohelpers/v1/clientdecryption
          headers:
            Content-Type: application/json
            autho: Bearer {{loginAccessToken}}
          body: >-
            {
                "message": "{{encResp}}",
                "key2id":"{{Ekey2id}}"
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: infoDecrypt
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/registration/authwithssn:
    post:
      description: 'TODO: Add Description'
      summary: authwithssn
      tags:
      - Update Mem Auth Entry
      operationId: MemberV1RegistrationAuthwithssnPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/AuthwithssnOkResponse'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/registration/authwithssn
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: authwithssn
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getcardback:
    post:
      description: 'TODO: Add Description'
      summary: getcardback
      tags:
      - Mem Info
      operationId: MemberV1InfoGetcardbackPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetcardbackOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - RowNum: 1
                  CopyLoc: Top
                  Copy: www.bluecrossma.com
                - RowNum: 2
                  CopyLoc: Para1
                  Copy: 'Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours.'
                - RowNum: 3
                  CopyLoc: Para2
                  Copy: This card is for identification only. It is not proof of membership, nor does it guarantee coverage.
                - RowNum: 4
                  CopyLoc: Para3
                  Copy: 'To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number.'
                - RowNum: 5
                  CopyLoc: Para4
                  Copy: Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426
                - RowNum: 6
                  CopyLoc: Para5
                  Copy: Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims.
                - RowNum: 7
                  CopyLoc: Bottom
                  Copy: Express Scripts, Inc. Pharmacy benefits administrator
                totRows: 7
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getcardback
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "RowNum":1,
                        "CopyLoc":"Top",
                        "Copy":"www.bluecrossma.com"
                     },
                     {
                        "RowNum":2,
                        "CopyLoc":"Para1",
                        "Copy":"Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours."
                     },
                     {
                        "RowNum":3,
                        "CopyLoc":"Para2",
                        "Copy":"This card is for identification only. It is not proof of membership, nor does it guarantee coverage."
                     },
                     {
                        "RowNum":4,
                        "CopyLoc":"Para3",
                        "Copy":"To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number."
                     },
                     {
                        "RowNum":5,
                        "CopyLoc":"Para4",
                        "Copy":"Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426"
                     },
                     {
                        "RowNum":6,
                        "CopyLoc":"Para5",
                        "Copy":"Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims."
                     },
                     {
                        "RowNum":7,
                        "CopyLoc":"Bottom",
                        "Copy":"Express Scripts, Inc. Pharmacy benefits administrator"
                     }
                  ],
                  "totRows":7
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getcardback
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getdependentlist:
    post:
      description: 'TODO: Add Description'
      summary: getdependentlist
      tags:
      - Card Front  Dependent List
      operationId: MemberV1InfoGetdependentlistPost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdependentlistOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - depSuffix: 10
                  depFirstName: Your
                  depRelationsip: Dependent
                  depLastName: Dependent1
                  depMemNum: 990000080900010
                  depCardId: XXH008302462
                  depId: 123456789
                - depSuffix: 11
                  depFirstName: Your
                  depRelationsip: Dependent
                  depLastName: Dependent2
                  depMemNum: 990000081000011
                  depCardId: XXH008302462
                  depId: 123456789
                totRows: 2
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getdependentlist
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "depSuffix":10,
                        "depFirstName":"Your",
                        "depRelationsip":"Dependent",
                        "depLastName":"Dependent1",
                        "depMemNum":990000080900010,
                        "depCardId":"XXH008302462",
                        "depId":123456789
                     },
                     {
                        "depSuffix":11,
                        "depFirstName":"Your",
                        "depRelationsip":"Dependent",
                        "depLastName":"Dependent2",
                        "depMemNum":990000081000011,
                        "depCardId":"XXH008302462",
                        "depId":123456789
                     }
                  ],
                  "totRows":2
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getdependentlist
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getmemberinfo:
    post:
      description: 'TODO: Add Description'
      summary: getmemberinfo
      tags:
      - getmemberinfo Only
      operationId: MemberV1InfoGetmemberinfoPost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetmemberinfoOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  lastLoginDt: 10/06/2017
                  RowNum: 1
                  visitPrvName: PAUL J GEMIS MD
                  rxStrength: 50-12
                  memFistName: Brian
                  rxNSDC: 00093736756
                  rxDispPrvState: MA
                  visitZip: 1810
                  rxDispPrvCity: CHICOPEE
                  visitPrvNum: 70010000J10454
                  sythID: 7F8B9103A7633EFFCD594E7A39D0F6CF6AE2DBF4
                  clmSrvType: Medical
                  visitSvcDt: 08/31/2011
                  rxPrescPrvName: PATRICK J BOYCE MD
                  visitPhone: 978-475-4202
                  rxDrug: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 MG
                  rxPrescPrvNum: 70010000J06753
                  clmPrvName: THE GENERAL HOSPITAL CORPORATION DBA
                  visitStreet: 140 HAVERHILL STREET
                  clmPaidAmt: 106.73
                  clmStatus: Complete
                  visitState: MA
                  clmICN: 20162840657102
                  numOfClmsSinceLastLogin: 0
                  clmAllowAmt: 106.73
                  rxDispPrvZip: 1013
                  rxPrescPhone: 413-534-1665
                  rxDispPrvPhone: 413-592-4696
                  clmDOS: 10/04/2016
                  visitCity: ANDOVER
                  rxDispDt: 12/20/2013
                  rxDispPrvNum: 70010002234071
                  memMidInit: B
                  memGender: M
                  rxDispPrvStreet: 577 MEADOW ST
                  rxDispPrvName: RITE AID
                  memLastName: Friqgulde
                  clmPaymtStatus: Paid
                  hasDependents: false
                  visitSpec: GENERAL SURGERY
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getmemberinfo
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "ROWSET": {
                    "ROWS": {
                        "lastLoginDt": "10/06/2017",
                        "RowNum": 1,
                        "visitPrvName": "PAUL J GEMIS MD",
                        "rxStrength": "50-12",
                        "memFistName": "Brian",
                        "rxNSDC": "00093736756",
                        "rxDispPrvState": "MA",
                        "visitZip": 1810,
                        "rxDispPrvCity": "CHICOPEE",
                        "visitPrvNum": "70010000J10454",
                        "sythID": "7F8B9103A7633EFFCD594E7A39D0F6CF6AE2DBF4",
                        "clmSrvType": "Medical",
                        "visitSvcDt": "08/31/2011",
                        "rxPrescPrvName": "PATRICK J BOYCE MD",
                        "visitPhone": "978-475-4202",
                        "rxDrug": "Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 MG",
                        "rxPrescPrvNum": "70010000J06753",
                        "clmPrvName": "THE GENERAL HOSPITAL CORPORATION DBA",
                        "visitStreet": "140 HAVERHILL STREET",
                        "clmPaidAmt": 106.73,
                        "clmStatus": "Complete",
                        "visitState": "MA",
                        "clmICN": 20162840657102,
                        "numOfClmsSinceLastLogin": 0,
                        "clmAllowAmt": 106.73,
                        "rxDispPrvZip": 1013,
                        "rxPrescPhone": "413-534-1665",
                        "rxDispPrvPhone": "413-592-4696",
                        "clmDOS": "10/04/2016",
                        "visitCity": "ANDOVER",
                        "rxDispDt": "12/20/2013",
                        "rxDispPrvNum": 70010002234071,
                        "memMidInit": "B",
                        "memGender": "M",
                        "rxDispPrvStreet": "577 MEADOW ST",
                        "rxDispPrvName": "RITE AID",
                        "memLastName": "Friqgulde",
                        "clmPaymtStatus": "Paid",
                        "hasDependents": false,
                        "visitSpec": "GENERAL SURGERY"
                    },
                    "totRows": 1
                }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getmemberinfo
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getlimitedplaninfo:
    post:
      description: 'TODO: Add Description'
      summary: getlimitedplaninfo
      tags:
      - Mem Info
      operationId: MemberV1InfoGetlimitedplaninfoPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Getlimitedplaninfo'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  ProdDesc: BLUE CHOICE PLAN 2
                  OvCopay: 20/15
                  nurseLine: 1-888-247-2583
                  hasFAD: true
                  RowNum: 1
                  CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
                  acctNum: 0001420
                  BHCopay: 15
                  rxBin: 'RxBin: 003858 PCN: A4'
                  hasRxBenefit: true
                  planModel: true
                  FADNetID: 311005011
                  rxGRP: 'RxGRP: MASA'
                  hasBHBenefit: true
                  ERCopay: 50
                  MemServPh: 1-800-238-6616
                  hasDependents: false
                  grpNum: 004000943
                  preventCopay: 0
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getlimitedplaninfo
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "ProdDesc":"BLUE CHOICE PLAN 2",
                     "OvCopay":"20/15",
                     "nurseLine":"1-888-247-2583",
                     "hasFAD":true,
                     "RowNum":1,
                     "CopayInfo":"Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.",
                     "acctNum":"0001420",
                     "BHCopay":15,
                     "rxBin":"RxBin: 003858 PCN: A4",
                     "hasRxBenefit":true,
                     "planModel":true,
                     "FADNetID":311005011,
                     "rxGRP":"RxGRP: MASA",
                     "hasBHBenefit":true,
                     "ERCopay":50,
                     "MemServPh":"1-800-238-6616",
                     "hasDependents":false,
                     "grpNum":"004000943",
                     "preventCopay":0
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getlimitedplaninfo
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getmemprofile:
    post:
      description: Retrieves the member profile attributes set with updatememprofile.
      summary: getmemprofile
      tags:
      - Update Profile
      operationId: MemberV1InfoGetmemprofilePost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetmemprofileExampleResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  usr_swrveid_a93klskd392kfh92: a93klskd392KFH92
                  usr_shoesize: 9.5
                  source: usr
                  usr_weight: 150
                  usr_swrveid_z93klskd3adfefh92: Z93klskd3ADFEFH92
                  usr_lastlogin: 01/23/2018
                  usr_swrveid_4938539238andcfk: 4938539238andcfk
                  usr_prevlogin: 01/08/2018
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getmemprofile
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "usr_swrveid_a93klskd392kfh92":"a93klskd392KFH92",
                     "usr_shoesize":9.5,
                     "source":"usr",
                     "usr_weight":150,
                     "usr_swrveid_z93klskd3adfefh92":"Z93klskd3ADFEFH92",
                     "usr_lastlogin":"01/23/2018",
                     "usr_swrveid_4938539238andcfk":"4938539238andcfk",
                     "usr_prevlogin":"01/08/2018"
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getmemprofile
        x-testDescription: Retrieves the member profile attributes set with updatememprofile.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getmempreference:
    post:
      description: Retrieves the member preference attributes set with updatemempreference.
      summary: getmempreference
      tags:
      - Update Preference
      operationId: MemberV1InfoGetmempreferencePost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetmempreferenceOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  source: pref
                  pref_eobviaemail: No
                  pref_besttimetocall: Never
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getmempreference
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "source":"pref",
                     "pref_eobviaemail":"No",
                     "pref_besttimetocall":"Never"
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getmempreference
        x-testDescription: Retrieves the member preference attributes set with updatemempreference.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getrecentvisits:
    post:
      description: 'TODO: Add Description'
      summary: getrecentvisits
      tags:
      - Mem Info
      operationId: MemberV1InfoGetrecentvisitsPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetrecentvisitsOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - RowNum: 5
                  PrvState: MA
                  PrvPh: 978-269-0030
                  IsPCP: true
                  PrvType: Physician
                  PrvName: PRATHIMA CHALOORI MD
                  PrvSpec: Family Practice
                  PrvCity: Andover
                  addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
                  DOS: 10/29/13
                  PrvZip: 1810
                  hasAddress: true
                  PrvStreet: 140 Haverhill St
                - RowNum: 2
                  PrvState: MA
                  PrvPh: 781-245-5200
                  IsPCP: false
                  PrvType: Physician
                  PrvName: CHARLES D EVANS MD
                  PrvSpec: Ophthalmology
                  PrvCity: Wakefield
                  addressStr: 669 MAIN ST, WAKEFIELD MA 01880
                  DOS: 08/24/12
                  PrvZip: 1880
                  hasAddress: true
                  PrvStreet: 669 Main St
                - RowNum: 3
                  PrvState: MA
                  PrvPh: 978-683-4000
                  IsPCP: false
                  PrvType: Physician
                  PrvName: MEGHA G JOSHI MD
                  PrvSpec: Clinical Pathology
                  PrvCity: Lawrence
                  addressStr: 1 GENERAL ST, LAWRENCE MA 01841
                  DOS: 12/28/11
                  PrvZip: 1841
                  hasAddress: true
                  PrvStreet: 1 General St
                - RowNum: 4
                  PrvState: MA
                  PrvPh: 978-683-4000
                  IsPCP: false
                  PrvType: Physician
                  PrvName: MADHAVA K SETTY MD
                  PrvSpec: Hospital Based Anesthesiologists
                  PrvCity: Lawrence
                  addressStr: 1 GENERAL ST, LAWRENCE MA 01842
                  DOS: 12/28/11
                  PrvZip: 1842
                  hasAddress: true
                  PrvStreet: 1 General St
                - RowNum: 1
                  PrvState: MA
                  PrvPh: 978-475-4202
                  IsPCP: false
                  PrvType: Physician
                  PrvName: PAUL J GEMIS MD
                  PrvSpec: General Surgery
                  PrvCity: Andover
                  addressStr: 140 HAVERHILL STREET, ANDOVER MA 01810
                  DOS: 08/31/11
                  PrvZip: 1810
                  hasAddress: true
                  PrvStreet: 140 Haverhill Street
                totRows: 5
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getrecentvisits
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "RowNum":5,
                        "PrvState":"MA",
                        "PrvPh":"978-269-0030",
                        "IsPCP":true,
                        "PrvType":"Physician",
                        "PrvName":"PRATHIMA CHALOORI MD",
                        "PrvSpec":"Family Practice",
                        "PrvCity":"Andover",
                        "addressStr":"140 HAVERHILL ST, ANDOVER MA 01810",
                        "DOS":"10/29/13",
                        "PrvZip":1810,
                        "hasAddress":true,
                        "PrvStreet":"140 Haverhill St"
                     },
                     {
                        "RowNum":2,
                        "PrvState":"MA",
                        "PrvPh":"781-245-5200",
                        "IsPCP":false,
                        "PrvType":"Physician",
                        "PrvName":"CHARLES D EVANS MD",
                        "PrvSpec":"Ophthalmology",
                        "PrvCity":"Wakefield",
                        "addressStr":"669 MAIN ST, WAKEFIELD MA 01880",
                        "DOS":"08/24/12",
                        "PrvZip":1880,
                        "hasAddress":true,
                        "PrvStreet":"669 Main St"
                     },
                     {
                        "RowNum":3,
                        "PrvState":"MA",
                        "PrvPh":"978-683-4000",
                        "IsPCP":false,
                        "PrvType":"Physician",
                        "PrvName":"MEGHA G JOSHI MD",
                        "PrvSpec":"Clinical Pathology",
                        "PrvCity":"Lawrence",
                        "addressStr":"1 GENERAL ST, LAWRENCE MA 01841",
                        "DOS":"12/28/11",
                        "PrvZip":1841,
                        "hasAddress":true,
                        "PrvStreet":"1 General St"
                     },
                     {
                        "RowNum":4,
                        "PrvState":"MA",
                        "PrvPh":"978-683-4000",
                        "IsPCP":false,
                        "PrvType":"Physician",
                        "PrvName":"MADHAVA K SETTY MD",
                        "PrvSpec":"Hospital Based Anesthesiologists",
                        "PrvCity":"Lawrence",
                        "addressStr":"1 GENERAL ST, LAWRENCE MA 01842",
                        "DOS":"12/28/11",
                        "PrvZip":1842,
                        "hasAddress":true,
                        "PrvStreet":"1 General St"
                     },
                     {
                        "RowNum":1,
                        "PrvState":"MA",
                        "PrvPh":"978-475-4202",
                        "IsPCP":false,
                        "PrvType":"Physician",
                        "PrvName":"PAUL J GEMIS MD",
                        "PrvSpec":"General Surgery",
                        "PrvCity":"Andover",
                        "addressStr":"140 HAVERHILL STREET, ANDOVER MA 01810",
                        "DOS":"08/31/11",
                        "PrvZip":1810,
                        "hasAddress":true,
                        "PrvStreet":"140 Haverhill Street"
                     }
                  ],
                  "totRows":5
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getrecentvisits
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getrecentrx:
    post:
      description: 'TODO: Add Description'
      summary: getrecentrx
      tags:
      - Mem Info
      operationId: MemberV1InfoGetrecentrxPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetrecentrxOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - DispStreet: 577 Meadow St
                  PrescPh: 413-534-1665
                  RowNum: 1
                  DispName: RITE AID
                  QtyDisp: 30
                  DispPh: 413-592-4696
                  GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
                  PrescName: PATRICK J BOYCE MD
                  DispDt: 12/20/13
                  DispCity: Chicopee
                  addressStr: 577 MEADOW ST, CHICOPEE MA 01013
                  Strength: 50-12
                  DispZip: 1013
                  DispState: MA
                  hasAddress: true
                  BrandName: Losartan-Hydrochlorothiaz
                - DispStreet: 577 Meadow St
                  PrescPh: 413-534-1665
                  RowNum: 4
                  DispName: RITE AID
                  QtyDisp: 30
                  DispPh: 413-592-4696
                  GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
                  PrescName: PATRICK J BOYCE MD
                  DispDt: 04/25/13
                  DispCity: Chicopee
                  addressStr: 577 MEADOW ST, CHICOPEE MA 01013
                  Strength: 50-12
                  DispZip: 1013
                  DispState: MA
                  hasAddress: true
                  BrandName: Losartan-Hydrochlorothiaz
                - DispStreet: 577 Meadow St
                  PrescPh: 413-534-1665
                  RowNum: 2
                  DispName: RITE AID
                  QtyDisp: 30
                  DispPh: 413-592-4696
                  GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
                  PrescName: PATRICK J BOYCE MD
                  DispDt: 04/22/13
                  DispCity: Chicopee
                  addressStr: 577 MEADOW ST, CHICOPEE MA 01013
                  Strength: 10-12
                  DispZip: 1013
                  DispState: MA
                  hasAddress: true
                  BrandName: Lisinopril-Hydrochlorothi
                - DispStreet: 577 Meadow St
                  PrescPh: 413-534-1665
                  RowNum: 3
                  DispName: RITE AID
                  QtyDisp: 30
                  DispPh: 413-592-4696
                  GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
                  PrescName: PATRICK J BOYCE MD
                  DispDt: 03/15/13
                  DispCity: Chicopee
                  addressStr: 577 MEADOW ST, CHICOPEE MA 01013
                  Strength: 10-12
                  DispZip: 1013
                  DispState: MA
                  hasAddress: true
                  BrandName: Lisinopril-Hydrochlorothi
                - DispStreet: 577 Meadow St
                  PrescPh: 413-420-2210
                  RowNum: 5
                  DispName: RITE AID
                  QtyDisp: 30
                  DispPh: 413-592-4696
                  GenericName: Amoxicillin (Trihydrate) Cap 500 Mg
                  PrescName: ALAN D SAMPSON DMD
                  DispDt: 02/25/13
                  DispCity: Chicopee
                  addressStr: 577 MEADOW ST, CHICOPEE MA 01013
                  Strength: 500 M
                  DispZip: 1013
                  DispState: MA
                  hasAddress: true
                  BrandName: Amoxicillin
                totRows: 5
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getrecentrx
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "DispStreet":"577 Meadow St",
                        "PrescPh":"413-534-1665",
                        "RowNum":1,
                        "DispName":"RITE AID",
                        "QtyDisp":30,
                        "DispPh":"413-592-4696",
                        "GenericName":"Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg",
                        "PrescName":"PATRICK J BOYCE MD",
                        "DispDt":"12/20/13",
                        "DispCity":"Chicopee",
                        "addressStr":"577 MEADOW ST, CHICOPEE MA 01013",
                        "Strength":"50-12",
                        "DispZip":1013,
                        "DispState":"MA",
                        "hasAddress":true,
                        "BrandName":"Losartan-Hydrochlorothiaz"
                     },
                     {
                        "DispStreet":"577 Meadow St",
                        "PrescPh":"413-534-1665",
                        "RowNum":4,
                        "DispName":"RITE AID",
                        "QtyDisp":30,
                        "DispPh":"413-592-4696",
                        "GenericName":"Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg",
                        "PrescName":"PATRICK J BOYCE MD",
                        "DispDt":"04/25/13",
                        "DispCity":"Chicopee",
                        "addressStr":"577 MEADOW ST, CHICOPEE MA 01013",
                        "Strength":"50-12",
                        "DispZip":1013,
                        "DispState":"MA",
                        "hasAddress":true,
                        "BrandName":"Losartan-Hydrochlorothiaz"
                     },
                     {
                        "DispStreet":"577 Meadow St",
                        "PrescPh":"413-534-1665",
                        "RowNum":2,
                        "DispName":"RITE AID",
                        "QtyDisp":30,
                        "DispPh":"413-592-4696",
                        "GenericName":"Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg",
                        "PrescName":"PATRICK J BOYCE MD",
                        "DispDt":"04/22/13",
                        "DispCity":"Chicopee",
                        "addressStr":"577 MEADOW ST, CHICOPEE MA 01013",
                        "Strength":"10-12",
                        "DispZip":1013,
                        "DispState":"MA",
                        "hasAddress":true,
                        "BrandName":"Lisinopril-Hydrochlorothi"
                     },
                     {
                        "DispStreet":"577 Meadow St",
                        "PrescPh":"413-534-1665",
                        "RowNum":3,
                        "DispName":"RITE AID",
                        "QtyDisp":30,
                        "DispPh":"413-592-4696",
                        "GenericName":"Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg",
                        "PrescName":"PATRICK J BOYCE MD",
                        "DispDt":"03/15/13",
                        "DispCity":"Chicopee",
                        "addressStr":"577 MEADOW ST, CHICOPEE MA 01013",
                        "Strength":"10-12",
                        "DispZip":1013,
                        "DispState":"MA",
                        "hasAddress":true,
                        "BrandName":"Lisinopril-Hydrochlorothi"
                     },
                     {
                        "DispStreet":"577 Meadow St",
                        "PrescPh":"413-420-2210",
                        "RowNum":5,
                        "DispName":"RITE AID",
                        "QtyDisp":30,
                        "DispPh":"413-592-4696",
                        "GenericName":"Amoxicillin (Trihydrate) Cap 500 Mg",
                        "PrescName":"ALAN D SAMPSON DMD",
                        "DispDt":"02/25/13",
                        "DispCity":"Chicopee",
                        "addressStr":"577 MEADOW ST, CHICOPEE MA 01013",
                        "Strength":"500 M",
                        "DispZip":1013,
                        "DispState":"MA",
                        "hasAddress":true,
                        "BrandName":"Amoxicillin"
                     }
                  ],
                  "totRows":5
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getrecentrx
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getalerts:
    post:
      description: Returns alerts for the logged in subscriber or spouse (not Dependents).
      summary: getalerts
      tags:
      - Mem Info
      operationId: MemberV1InfoGetalertsPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetalertsSampleResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - messageID: 100
                  RowNum: 1
                  AlertShortTxt: Use Mail Order Pharmacy
                  AlertLongTxt: You're using a retail pharmacy for one or more of your prescriptions when you could use mail order. This can save you money. Please consult your pharmacist
                - messageID: 500
                  RowNum: 2
                  AlertShortTxt: Fitness Benefit
                  AlertLongTxt: Collect your fitness benefit by downloading the form and submitting it.
                totRows: 2
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getalerts
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "messageID":100,
                        "RowNum":1,
                        "AlertShortTxt":"Use Mail Order Pharmacy",
                        "AlertLongTxt":"You're using a retail pharmacy for one or more of your prescriptions when you could use mail order. This can save you money. Please consult your pharmacist"
                     },
                     {
                        "messageID":500,
                        "RowNum":2,
                        "AlertShortTxt":"Fitness Benefit",
                        "AlertLongTxt":"Collect your fitness benefit by downloading the form and submitting it."
                     }
                  ],
                  "totRows":2
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getalerts
        x-testDescription: Returns alerts for the logged in subscriber or spouse (not Dependents).
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/getfinancebalance:
    post:
      description: "getfinancialbalance can return two messages:\nalgmsg will contain the encrypted response from Alegeus (can be null).\nheqmsg will contain the encrypted response from Health Equities (can be null)\n\nIf the member have both Alegeus and Health Equity financial accounts\n{ \"result\": \"0\", \"errormessage\": null, \"displaymessage\": null, \"heqmsg\": <encrypted message>, algmsg: <encryptedmessage>}\n\nIf the member have only Alegeus financial account.\n\n{ \"result\": \"0\", \"errormessage\": null, \"displaymessage\": null, \"heqmsg\": <encrypted message>, algmsg: <encryptedmessage>} \n\n\nIf the member have only Health Equity financial account\n\n{ \"result\": \"0\", \"errormessage\": null, \"displaymessage\": null, \"heqmsg\": <encrypted message>, algmsg: }\n"
      summary: getfinancebalanceALG
      tags:
      - Mem Info
      operationId: MemberV1InfoGetfinancebalancePost2
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/AlegeusGetfinancebalanceAlgmsgDecrypted'
          examples:
            application/json:
            - AccountDetailInfo: 
              AccountDisplayHeader: Health Reimbursement Arrangement
              AccountDisplayOptions: 142606335
              AccountType: HRD
              AccountTypeOptions: 196608
              AcctStatusCde: 1
              AdditionalDeposits: 0
              AnnualElection: 2000
              Balance: 2000
              BalanceDue: 0
              DataPartnerOptions: 0
              DisplayableFields:
              - AlternativeFieldName: Account Description
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: AccountDisplayHeader
              - AlternativeFieldName: Annual Election
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: AnnualElection
              - AlternativeFieldName: Contributions YTD
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: TotalContributions
              - AlternativeFieldName: Paid YTD
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: Payments
              - AlternativeFieldName: Additional Deposits
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: AdditionalDeposits
              - AlternativeFieldName: Plan Start
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: PlanStartDate
              - AlternativeFieldName: Plan End
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: PlanEndDate
              - AlternativeFieldName: Last Day to Submit Claims
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: SubmitClaimsLastDate
              - AlternativeFieldName: Balance
                DisplayOptions: 2
                DisplaySpecifications: 0
                OriginalFieldName: Balance
              ExternalBankAccounts: 
              ExternalFunded: 
              FlexAccountKey: 4283
              FlexAcctId: 0000004283
              GracePeriodEndDte: 20180531
              HSABalance: 2000
              HraAcct: false
              IsWCABank: 
              OptInStatus: 
              Payments: 0
              PlanEndDate: 20180531
              PlanId: 002356194
              PlanOptions2: 0
              PlanStartDate: 20170601
              PlanYear: 1
              PortfolioBalance: 0
              Priority: 14
              ProductPartnerId: ''
              SubmitClaimsLastDate: 2018-05-31T05:00:00.0000000+00:00
              TotalContributions: 2000
              TotalHSABalance: 2000
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/getfinancebalance
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            [
               {
                  "AccountDetailInfo":null,
                  "AccountDisplayHeader":"Health Reimbursement Arrangement",
                  "AccountDisplayOptions":142606335,
                  "AccountType":"HRD",
                  "AccountTypeOptions":196608,
                  "AcctStatusCde":1,
                  "AdditionalDeposits":0E+0,
                  "AnnualElection":2E+3,
                  "Balance":2E+3,
                  "BalanceDue":0E+0,
                  "DataPartnerOptions":0,
                  "DisplayableFields":[
                     {
                        "AlternativeFieldName":"Account Description",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"AccountDisplayHeader"
                     },
                     {
                        "AlternativeFieldName":"Annual Election",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"AnnualElection"
                     },
                     {
                        "AlternativeFieldName":"Contributions YTD",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"TotalContributions"
                     },
                     {
                        "AlternativeFieldName":"Paid YTD",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"Payments"
                     },
                     {
                        "AlternativeFieldName":"Additional Deposits",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"AdditionalDeposits"
                     },
                     {
                        "AlternativeFieldName":"Plan Start",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"PlanStartDate"
                     },
                     {
                        "AlternativeFieldName":"Plan End",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"PlanEndDate"
                     },
                     {
                        "AlternativeFieldName":"Last Day to Submit Claims",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"SubmitClaimsLastDate"
                     },
                     {
                        "AlternativeFieldName":"Balance",
                        "DisplayOptions":2,
                        "DisplaySpecifications":0,
                        "OriginalFieldName":"Balance"
                     }
                  ],
                  "ExternalBankAccounts":null,
                  "ExternalFunded":null,
                  "FlexAccountKey":4283,
                  "FlexAcctId":"0000004283",
                  "GracePeriodEndDte":"20180531",
                  "HSABalance":2E+3,
                  "HraAcct":false,
                  "IsWCABank":null,
                  "OptInStatus":null,
                  "Payments":0E+0,
                  "PlanEndDate":"20180531",
                  "PlanId":"002356194",
                  "PlanOptions2":0,
                  "PlanStartDate":"20170601",
                  "PlanYear":1,
                  "PortfolioBalance":0,
                  "Priority":14,
                  "ProductPartnerId":"",
                  "SubmitClaimsLastDate":"\/Date(1527742800000-0500)\/",
                  "TotalContributions":2E+3,
                  "TotalHSABalance":2E+3
               }
            ]
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getfinancebalanceALG
        x-testDescription: "getfinancialbalance can return two messages:\nalgmsg will contain the encrypted response from Alegeus (can be null).\nheqmsg will contain the encrypted response from Health Equities (can be null)\n\nIf the member have both Alegeus and Health Equity financial accounts\n{ \"result\": \"0\", \"errormessage\": null, \"displaymessage\": null, \"heqmsg\": <encrypted message>, algmsg: <encryptedmessage>}\n\nIf the member have only Alegeus financial account.\n\n{ \"result\": \"0\", \"errormessage\": null, \"displaymessage\": null, \"heqmsg\": <encrypted message>, algmsg: <encryptedmessage>} \n\n\nIf the member have only Health Equity financial account\n\n{ \"result\": \"0\", \"errormessage\": null, \"displaymessage\": null, \"heqmsg\": <encrypted message>, algmsg: }\n"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /clientsideencryption:
    post:
      description: Encrypts the request body
      summary: meminfoEncrypt
      tags:
      - Card Front  Dependent List
      operationId: ClientsideencryptionPost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/MeminfoEncryptRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /clientsideencryption
          headers:
            Content-Type: application/json
          body: >
            {

            "mesg":

            "{\"useridin\":\"{{userid}}\",\"key2id\":\"{{Ekey2id}}\"}",

            "key1id":"{{Ekey1id}}"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: meminfoEncrypt
        x-testDescription: Encrypts the request body
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/claimsinfo/getclaims:
    post:
      description: 'TODO: Add Description'
      summary: getclaims
      tags:
      - Claims Info
      operationId: MemberV1ClaimsinfoGetclaimsPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetclaimsOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - lastDOS: 03/01/2017
                  provName: CVS
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 03/01/2017
                  intClmNum: 941703011131691
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Pharmacy
                  youOweAmt: -3.2999999999999998
                  prescribingProvName: ERIC M WEIL MD
                  memLName: Friguliettecde
                  DOS: 03/01/2017
                  billedAmt: -9.7400000000000002
                - lastDOS: 01/17/2017
                  provName: PAUL S GAMBER JR PC
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 01/17/2017
                  intClmNum: 36170190186200
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Dental
                  youOweAmt: 0
                  memLName: Friguliettecde
                  DOS: 01/17/2017
                  billedAmt: 148
                - lastDOS: 11/23/2016
                  provName: ORTHOCARE MEDICALEQUIPMENT LLC
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 11/23/2016
                  intClmNum: 26163420861100
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Medical
                  youOweAmt: 17.5
                  memLName: Friguliettecde
                  DOS: 11/23/2016
                  billedAmt: 329.33999999999997
                - lastDOS: 10/04/2016
                  provName: THE GENERAL HOSPITAL CORPORATION DBA
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 10/04/2016
                  intClmNum: 20162840657102
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Medical
                  youOweAmt: 0
                  memLName: Friguliettecde
                  DOS: 10/04/2016
                  billedAmt: 693
                - lastDOS: 07/23/2016
                  provName: CVS
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 07/23/2016
                  intClmNum: 941607231020935
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Pharmacy
                  youOweAmt: 15
                  prescribingProvName: HARSHA V GOPAL MD
                  memLName: Friguliettecde
                  DOS: 07/23/2016
                  billedAmt: 92.739999999999995
                - lastDOS: 12/21/2015
                  provName: NORTHEAST HOSPITALCORPORATION
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 12/21/2015
                  intClmNum: 20160080161000
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Medical
                  youOweAmt: 20
                  memLName: Friguliettecde
                  DOS: 12/21/2015
                  billedAmt: 188
                - lastDOS: 12/09/2015
                  provName: VERNICK AND GOPALLLC
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 12/09/2015
                  intClmNum: 26153490527900
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Medical
                  youOweAmt: 0
                  memLName: Friguliettecde
                  DOS: 12/09/2015
                  billedAmt: 325
                - lastDOS: 09/28/2015
                  provName: THE GENERAL HOSPITAL CORPORATION DBA
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 09/28/2015
                  intClmNum: 20152780457000
                  subNum: 0083024620000
                  memFName: Brian
                  memNum: 0083024620000011
                  memDOB: 01/22/1989
                  svcType: Medical
                  youOweAmt: 0
                  memLName: Friguliettecde
                  DOS: 09/28/2015
                  billedAmt: 218
                totRows: 8
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/claimsinfo/getclaims
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "lastDOS":"03/01/2017",
                        "provName":"CVS",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"03/01/2017",
                        "intClmNum":941703011131691,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Pharmacy",
                        "youOweAmt":-3.3,
                        "prescribingProvName":"ERIC M WEIL MD",
                        "memLName":"Friguliettecde",
                        "DOS":"03/01/2017",
                        "billedAmt":-9.74
                     },
                     {
                        "lastDOS":"01/17/2017",
                        "provName":"PAUL S GAMBER JR PC",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"01/17/2017",
                        "intClmNum":36170190186200,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Dental",
                        "youOweAmt":0,
                        "memLName":"Friguliettecde",
                        "DOS":"01/17/2017",
                        "billedAmt":148
                     },
                     {
                        "lastDOS":"11/23/2016",
                        "provName":"ORTHOCARE MEDICALEQUIPMENT LLC",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"11/23/2016",
                        "intClmNum":26163420861100,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Medical",
                        "youOweAmt":17.5,
                        "memLName":"Friguliettecde",
                        "DOS":"11/23/2016",
                        "billedAmt":329.34
                     },
                     {
                        "lastDOS":"10/04/2016",
                        "provName":"THE GENERAL HOSPITAL CORPORATION DBA",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"10/04/2016",
                        "intClmNum":20162840657102,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Medical",
                        "youOweAmt":0,
                        "memLName":"Friguliettecde",
                        "DOS":"10/04/2016",
                        "billedAmt":693
                     },
                     {
                        "lastDOS":"07/23/2016",
                        "provName":"CVS",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"07/23/2016",
                        "intClmNum":941607231020935,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Pharmacy",
                        "youOweAmt":15,
                        "prescribingProvName":"HARSHA V GOPAL MD",
                        "memLName":"Friguliettecde",
                        "DOS":"07/23/2016",
                        "billedAmt":92.74
                     },
                     {
                        "lastDOS":"12/21/2015",
                        "provName":"NORTHEAST HOSPITALCORPORATION",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"12/21/2015",
                        "intClmNum":20160080161000,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Medical",
                        "youOweAmt":20,
                        "memLName":"Friguliettecde",
                        "DOS":"12/21/2015",
                        "billedAmt":188
                     },
                     {
                        "lastDOS":"12/09/2015",
                        "provName":"VERNICK AND GOPALLLC",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"12/09/2015",
                        "intClmNum":26153490527900,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Medical",
                        "youOweAmt":0,
                        "memLName":"Friguliettecde",
                        "DOS":"12/09/2015",
                        "billedAmt":325
                     },
                     {
                        "lastDOS":"09/28/2015",
                        "provName":"THE GENERAL HOSPITAL CORPORATION DBA",
                        "isDependent":false,
                        "clm_paymt_stat":"Paid",
                        "clmStatus":"Complete",
                        "firstDOS":"09/28/2015",
                        "intClmNum":20152780457000,
                        "subNum":"0083024620000",
                        "memFName":"Brian",
                        "memNum":"0083024620000011",
                        "memDOB":"01/22/1989",
                        "svcType":"Medical",
                        "youOweAmt":0,
                        "memLName":"Friguliettecde",
                        "DOS":"09/28/2015",
                        "billedAmt":218
                     }
                  ],
                  "totRows":8
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getclaims
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/claimsinfo/getclaimsfordaterange:
    post:
      description: 'TODO: Add Description'
      summary: getclaimsfordaterange
      tags:
      - Claims Info
      operationId: MemberV1ClaimsinfoGetclaimsfordaterangePost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetclaimsfordaterangeOkResponse'
          examples: {}
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/claimsinfo/getclaimsforICN:
    post:
      description: 'TODO: Add Description'
      summary: getclaimsforICN
      tags:
      - Claims Info
      operationId: MemberV1ClaimsinfoGetclaimsforICNPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetclaimsforicnOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  alldAmt: 146.63
                  coinsAmt: 0
                  notCovAmt: 0
                  provName: VERNICK AND GOPALLLC
                  RowNum: 1
                  copayAmt: 0
                  clmStatus: Complete
                  paidAmt: 146.63
                  otherInsurance: 0
                  recDt: 12/14/2015
                  intClmNum: 26153490527900
                  serviceType: Medical
                  subNum: 0015880090000
                  msgSpecified: true
                  memFName: Sadegh
                  memNum: 0015880090000000
                  svcType: Technical Component
                  youOweAmt: 0
                  prvSubAmt: 325
                  statusDt: 12/15/2015
                  dedAmt: 0
                  clmPaymtStatus: Paid
                  DOS: 12/09/2015
                  lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/claimsinfo/getclaimsforICN
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "alldAmt":146.63,
                     "coinsAmt":0,
                     "notCovAmt":0,
                     "provName":"VERNICK AND GOPALLLC",
                     "RowNum":1,
                     "copayAmt":0,
                     "clmStatus":"Complete",
                     "paidAmt":146.63,
                     "otherInsurance":0,
                     "recDt":"12/14/2015",
                     "intClmNum":26153490527900,
                     "serviceType":"Medical",
                     "subNum":"0015880090000",
                     "msgSpecified":true,
                     "memFName":"Sadegh",
                     "memNum":"0015880090000000",
                     "svcType":"Technical Component",
                     "youOweAmt":0,
                     "prvSubAmt":325,
                     "statusDt":"12/15/2015",
                     "dedAmt":0,
                     "clmPaymtStatus":"Paid",
                     "DOS":"12/09/2015",
                     "lineMsg":"BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/"
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getclaimsforICN
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/claimsinfo/getclaimsforprovider:
    post:
      description: 'TODO: Add Description'
      summary: getclaimsforprovider
      tags:
      - Claims Info
      operationId: MemberV1ClaimsinfoGetclaimsforproviderPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetclaimsforproviderOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  lastDOS: 12/09/2015
                  provName: VERNICK AND GOPALLLC
                  isDependent: false
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 12/09/2015
                  intClmNum: 26153490527900
                  subNum: 0015880090000
                  memFName: Sadegh
                  memNum: 0015880090000000
                  memDOB: 09/10/1987
                  svcType: Medical
                  youOweAmt: 0
                  memLName: Dabiricde
                  DOS: 12/09/2015
                  billedAmt: 325
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/claimsinfo/getclaimsforprovider
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "lastDOS":"12/09/2015",
                     "provName":"VERNICK AND GOPALLLC",
                     "isDependent":false,
                     "clm_paymt_stat":"Paid",
                     "clmStatus":"Complete",
                     "firstDOS":"12/09/2015",
                     "intClmNum":26153490527900,
                     "subNum":"0015880090000",
                     "memFName":"Sadegh",
                     "memNum":"0015880090000000",
                     "memDOB":"09/10/1987",
                     "svcType":"Medical",
                     "youOweAmt":0,
                     "memLName":"Dabiricde",
                     "DOS":"12/09/2015",
                     "billedAmt":325
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getclaimsforprovider
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depclaimsinfo/getdepclaims:
    post:
      description: 'TODO: Add Description'
      summary: getdepclaims
      tags:
      - Depclaims Info
      operationId: MemberV1DepclaimsinfoGetdepclaimsPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdepclaimsOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  lastDOS: 10/28/2015
                  provName: LAWRENCE C RUSIN MD
                  isDependent: true
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 10/28/2015
                  intClmNum: 26160740416000
                  subNum: 0016703370000
                  memFName: Ambrose
                  memNum: 0016703370000010
                  memDOB: 08/09/2002
                  svcType: Medical
                  youOweAmt: 20
                  memLName: Jeri
                  DOS: 10/28/2015
                  billedAmt: 178
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depclaimsinfo/getdepclaims
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "lastDOS":"10/28/2015",
                     "provName":"LAWRENCE C RUSIN MD",
                     "isDependent":true,
                     "clm_paymt_stat":"Paid",
                     "clmStatus":"Complete",
                     "firstDOS":"10/28/2015",
                     "intClmNum":26160740416000,
                     "subNum":"0016703370000",
                     "memFName":"Ambrose",
                     "memNum":"0016703370000010",
                     "memDOB":"08/09/2002",
                     "svcType":"Medical",
                     "youOweAmt":20,
                     "memLName":"Jeri",
                     "DOS":"10/28/2015",
                     "billedAmt":178
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getdepclaims
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depclaimsinfo/getdepclaimsfordaterange:
    post:
      description: 'TODO: Add Description'
      summary: getdepclaimsfordaterange
      tags:
      - Depclaims Info
      operationId: MemberV1DepclaimsinfoGetdepclaimsfordaterangePost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdepclaimsfordaterangeOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  lastDOS: 10/28/2015
                  provName: LAWRENCE C RUSIN MD
                  isDependent: true
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 10/28/2015
                  intClmNum: 26160740416000
                  subNum: 0016703370000
                  memFName: Ambrose
                  memNum: 0016703370000010
                  memDOB: 08/09/2002
                  svcType: Medical
                  youOweAmt: 20
                  memLName: Jeri
                  DOS: 10/28/2015
                  billedAmt: 178
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depclaimsinfo/getdepclaimsfordaterange
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "lastDOS":"10/28/2015",
                     "provName":"LAWRENCE C RUSIN MD",
                     "isDependent":true,
                     "clm_paymt_stat":"Paid",
                     "clmStatus":"Complete",
                     "firstDOS":"10/28/2015",
                     "intClmNum":26160740416000,
                     "subNum":"0016703370000",
                     "memFName":"Ambrose",
                     "memNum":"0016703370000010",
                     "memDOB":"08/09/2002",
                     "svcType":"Medical",
                     "youOweAmt":20,
                     "memLName":"Jeri",
                     "DOS":"10/28/2015",
                     "billedAmt":178
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getdepclaimsfordaterange
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depclaimsinfo/getdepclaimsforICN:
    post:
      description: 'TODO: Add Description'
      summary: getdepclaimsforICN
      tags:
      - Depclaims Info
      operationId: MemberV1DepclaimsinfoGetdepclaimsforICNPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdepclaimsforicnOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  alldAmt: 76.790000000000006
                  coinsAmt: 0
                  notCovAmt: 0
                  provName: LAWRENCE C RUSIN MD
                  RowNum: 1
                  copayAmt: 20
                  clmStatus: Complete
                  paidAmt: 56.789999999999999
                  recDt: 11/01/2015
                  intClmNum: 26160740416000
                  serviceType: Medical
                  subNum: 0016703370000
                  msgSpecified: true
                  memFName: Ambrose
                  memNum: 0016703370000010
                  svcType: Medical Care
                  youOweAmt: 20
                  prvSubAmt: 178
                  statusDt: 11/02/2015
                  dedAmt: 0
                  clmPaymtStatus: Paid
                  DOS: 10/28/2015
                  lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depclaimsinfo/getdepclaimsforICN
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "alldAmt":76.79,
                     "coinsAmt":0,
                     "notCovAmt":0,
                     "provName":"LAWRENCE C RUSIN MD",
                     "RowNum":1,
                     "copayAmt":20,
                     "clmStatus":"Complete",
                     "paidAmt":56.79,
                     "recDt":"11/01/2015",
                     "intClmNum":26160740416000,
                     "serviceType":"Medical",
                     "subNum":"0016703370000",
                     "msgSpecified":true,
                     "memFName":"Ambrose",
                     "memNum":"0016703370000010",
                     "svcType":"Medical Care",
                     "youOweAmt":20,
                     "prvSubAmt":178,
                     "statusDt":"11/02/2015",
                     "dedAmt":0,
                     "clmPaymtStatus":"Paid",
                     "DOS":"10/28/2015",
                     "lineMsg":"BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/"
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getdepclaimsforICN
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depclaimsinfo/getdepclaimsforprovider:
    post:
      description: 'TODO: Add Description'
      summary: getdepclaimsforprovider
      tags:
      - Depclaims Info
      operationId: MemberV1DepclaimsinfoGetdepclaimsforproviderPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdepclaimsforproviderOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  lastDOS: 10/28/2015
                  provName: LAWRENCE C RUSIN MD
                  isDependent: true
                  clm_paymt_stat: Paid
                  clmStatus: Complete
                  firstDOS: 10/28/2015
                  intClmNum: 26160740416000
                  subNum: 0016703370000
                  memFName: Ambrose
                  memNum: 0016703370000010
                  memDOB: 08/09/2002
                  svcType: Medical
                  youOweAmt: 20
                  memLName: Jeri
                  DOS: 10/28/2015
                  billedAmt: 178
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depclaimsinfo/getdepclaimsforprovider
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "lastDOS":"10/28/2015",
                     "provName":"LAWRENCE C RUSIN MD",
                     "isDependent":true,
                     "clm_paymt_stat":"Paid",
                     "clmStatus":"Complete",
                     "firstDOS":"10/28/2015",
                     "intClmNum":26160740416000,
                     "subNum":"0016703370000",
                     "memFName":"Ambrose",
                     "memNum":"0016703370000010",
                     "memDOB":"08/09/2002",
                     "svcType":"Medical",
                     "youOweAmt":20,
                     "memLName":"Jeri",
                     "DOS":"10/28/2015",
                     "billedAmt":178
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getdepclaimsforprovider
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depinfo/getdepcardfront:
    post:
      description: 'TODO: Add Description'
      summary: getcardfront
      tags:
      - Dep Info
      operationId: MemberV1DepinfoGetdepcardfrontPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdepcardfrontOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  PCPPh: 978-287-9300
                  nurseLine: 1-888-247-2583
                  RowNum: 1
                  CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
                  isDependent: true
                  hasHEQ: false
                  hasALG: false
                  BHCopay: 25
                  dispSuitcase: true
                  PCPState: MA
                  rxBin: 'RxBin: 003858 PCN: A4'
                  PCPZip: 1742
                  MemName: AMBROSE JERI
                  ERCopay: 100
                  MemServPh: 1-800-238-6616
                  PCPSpecified: true
                  PCPStreet: 330 BAKER AVE
                  cardMemID: XXH001670337
                  ProdDesc: BLUE CHOICE PLAN 2
                  OvCopay: 25
                  hasFAD: true
                  PCPName: ANTHONY LOPEZ
                  rxSpecified: true
                  addressStr: 330 BAKER AVE, CONCORD MA 01742
                  PCPCity: CONCORD
                  FADNetID: 311005011
                  rxGRP: 'RxGRP: MASA'
                  PrevCopay: 0
                  hasDependents: false
                  MemSuff: 10
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depinfo/getdepcardfront
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "PCPPh":"978-287-9300",
                     "nurseLine":"1-888-247-2583",
                     "RowNum":1,
                     "CopayInfo":"Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.",
                     "isDependent":true,
                     "hasHEQ":false,
                     "hasALG":false,
                     "BHCopay":25,
                     "dispSuitcase":true,
                     "PCPState":"MA",
                     "rxBin":"RxBin: 003858 PCN: A4",
                     "PCPZip":1742,
                     "MemName":"AMBROSE JERI",
                     "ERCopay":100,
                     "MemServPh":"1-800-238-6616",
                     "PCPSpecified":true,
                     "PCPStreet":"330 BAKER AVE",
                     "cardMemID":"XXH001670337",
                     "ProdDesc":"BLUE CHOICE PLAN 2",
                     "OvCopay":25,
                     "hasFAD":true,
                     "PCPName":"ANTHONY LOPEZ",
                     "rxSpecified":true,
                     "addressStr":"330 BAKER AVE, CONCORD MA 01742",
                     "PCPCity":"CONCORD",
                     "FADNetID":311005011,
                     "rxGRP":"RxGRP: MASA",
                     "PrevCopay":0,
                     "hasDependents":false,
                     "MemSuff":10
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getcardfront
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depinfo/getdepcardback:
    post:
      description: 'TODO: Add Description'
      summary: getcardback
      tags:
      - Dep Info
      operationId: MemberV1DepinfoGetdepcardbackPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdepcardbackOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - RowNum: 1
                  CopyLoc: Top
                  Copy: www.bluecrossma.com
                - RowNum: 2
                  CopyLoc: Para1
                  Copy: 'Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours.'
                - RowNum: 3
                  CopyLoc: Para2
                  Copy: This card is for identification only. It is not proof of membership, nor does it guarantee coverage.
                - RowNum: 4
                  CopyLoc: Para3
                  Copy: 'To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number.'
                - RowNum: 5
                  CopyLoc: Para4
                  Copy: Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426
                - RowNum: 6
                  CopyLoc: Para5
                  Copy: Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims.
                - RowNum: 7
                  CopyLoc: Bottom
                  Copy: Express Scripts, Inc. Pharmacy benefits administrator
                totRows: 7
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depinfo/getdepcardback
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "RowNum":1,
                        "CopyLoc":"Top",
                        "Copy":"www.bluecrossma.com"
                     },
                     {
                        "RowNum":2,
                        "CopyLoc":"Para1",
                        "Copy":"Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours."
                     },
                     {
                        "RowNum":3,
                        "CopyLoc":"Para2",
                        "Copy":"This card is for identification only. It is not proof of membership, nor does it guarantee coverage."
                     },
                     {
                        "RowNum":4,
                        "CopyLoc":"Para3",
                        "Copy":"To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number."
                     },
                     {
                        "RowNum":5,
                        "CopyLoc":"Para4",
                        "Copy":"Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426"
                     },
                     {
                        "RowNum":6,
                        "CopyLoc":"Para5",
                        "Copy":"Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims."
                     },
                     {
                        "RowNum":7,
                        "CopyLoc":"Bottom",
                        "Copy":"Express Scripts, Inc. Pharmacy benefits administrator"
                     }
                  ],
                  "totRows":7
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getcardback
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depinfo/getdeprecentvisits:
    post:
      description: 'TODO: Add Description'
      summary: getrecentvisits
      tags:
      - Dep Info
      operationId: MemberV1DepinfoGetdeprecentvisitsPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdeprecentvisitsOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                - RowNum: 1
                  PrvState: MA
                  PrvPh: 413-395-7580
                  IsPCP: false
                  PrvType: Physician
                  PrvName: JEFFREY LEPPO MD
                  PrvSpec: Cardiovascular Disease
                  PrvCity: Pittsfield
                  addressStr: 41 WACONAH ST, PITTSFIELD MA 01201
                  DOS: 01/12/14
                  PrvZip: 1201
                  hasAddress: true
                  PrvStreet: 41 Waconah St
                - RowNum: 4
                  PrvState: MA
                  PrvPh: 413-447-2451
                  IsPCP: false
                  PrvType: Physician
                  PrvName: MAZEN GHANI MD
                  PrvSpec: Radiology
                  PrvCity: Pittsfield
                  addressStr: 725 NORTH ST, PITTSFIELD MA 01201
                  DOS: 01/12/14
                  PrvZip: 1201
                  hasAddress: true
                  PrvStreet: 725 North St
                - RowNum: 2
                  PrvState: MA
                  PrvPh: 413-445-4565
                  IsPCP: false
                  PrvType: Physician
                  PrvName: GREGORY D SHOULDICE MD
                  PrvSpec: Ophthalmology
                  PrvCity: Pittsfield
                  addressStr: 740 WILLIAMS ST, PITTSFIELD MA 01201
                  DOS: 09/30/13
                  PrvZip: 1201
                  hasAddress: true
                  PrvStreet: 740 Williams St
                - RowNum: 3
                  PrvState: MA
                  PrvPh: 413-499-2054
                  IsPCP: true
                  PrvType: Physician
                  PrvName: CHRISTOPHER TRANCYNGER MD
                  PrvSpec: Internal Medicine
                  PrvCity: Pittsfield
                  addressStr: 631B NORTH ST, PITTSFIELD MA 01201
                  DOS: 07/24/13
                  PrvZip: 1201
                  hasAddress: true
                  PrvStreet: 631b North St
                - RowNum: 5
                  PrvState: MA
                  PrvPh: 413-447-7622
                  IsPCP: false
                  PrvType: Dentist
                  PrvName: EDWIN J HELITZER DMD
                  PrvSpec: General Dentist
                  PrvCity: Pittsfield
                  addressStr: 195 SOUTH ST STE 2, PITTSFIELD MA 01201
                  DOS: 06/07/13
                  PrvZip: 1201
                  hasAddress: true
                  PrvStreet: 195 South St Ste 2
                totRows: 5
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depinfo/getdeprecentvisits
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":[
                     {
                        "RowNum":1,
                        "PrvState":"MA",
                        "PrvPh":"413-395-7580",
                        "IsPCP":false,
                        "PrvType":"Physician",
                        "PrvName":"JEFFREY LEPPO MD",
                        "PrvSpec":"Cardiovascular Disease",
                        "PrvCity":"Pittsfield",
                        "addressStr":"41 WACONAH ST, PITTSFIELD MA 01201",
                        "DOS":"01/12/14",
                        "PrvZip":1201,
                        "hasAddress":true,
                        "PrvStreet":"41 Waconah St"
                     },
                     {
                        "RowNum":4,
                        "PrvState":"MA",
                        "PrvPh":"413-447-2451",
                        "IsPCP":false,
                        "PrvType":"Physician",
                        "PrvName":"MAZEN GHANI MD",
                        "PrvSpec":"Radiology",
                        "PrvCity":"Pittsfield",
                        "addressStr":"725 NORTH ST, PITTSFIELD MA 01201",
                        "DOS":"01/12/14",
                        "PrvZip":1201,
                        "hasAddress":true,
                        "PrvStreet":"725 North St"
                     },
                     {
                        "RowNum":2,
                        "PrvState":"MA",
                        "PrvPh":"413-445-4565",
                        "IsPCP":false,
                        "PrvType":"Physician",
                        "PrvName":"GREGORY D SHOULDICE MD",
                        "PrvSpec":"Ophthalmology",
                        "PrvCity":"Pittsfield",
                        "addressStr":"740 WILLIAMS ST, PITTSFIELD MA 01201",
                        "DOS":"09/30/13",
                        "PrvZip":1201,
                        "hasAddress":true,
                        "PrvStreet":"740 Williams St"
                     },
                     {
                        "RowNum":3,
                        "PrvState":"MA",
                        "PrvPh":"413-499-2054",
                        "IsPCP":true,
                        "PrvType":"Physician",
                        "PrvName":"CHRISTOPHER TRANCYNGER MD",
                        "PrvSpec":"Internal Medicine",
                        "PrvCity":"Pittsfield",
                        "addressStr":"631B NORTH ST, PITTSFIELD MA 01201",
                        "DOS":"07/24/13",
                        "PrvZip":1201,
                        "hasAddress":true,
                        "PrvStreet":"631b North St"
                     },
                     {
                        "RowNum":5,
                        "PrvState":"MA",
                        "PrvPh":"413-447-7622",
                        "IsPCP":false,
                        "PrvType":"Dentist",
                        "PrvName":"EDWIN J HELITZER DMD",
                        "PrvSpec":"General Dentist",
                        "PrvCity":"Pittsfield",
                        "addressStr":"195 SOUTH ST STE 2, PITTSFIELD MA 01201",
                        "DOS":"06/07/13",
                        "PrvZip":1201,
                        "hasAddress":true,
                        "PrvStreet":"195 South St Ste 2"
                     }
                  ],
                  "totRows":5
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getrecentvisits
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depinfo/getdeprecentrx:
    post:
      description: 'TODO: Add Description'
      summary: getrecentrx
      tags:
      - Dep Info
      operationId: MemberV1DepinfoGetdeprecentrxPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdeprecentrxOkResponse'
          examples: {}
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depinfo/getdepmemberinfo:
    post:
      description: 'TODO: Add Description'
      summary: getmemberinfo
      tags:
      - Dep Info
      operationId: MemberV1DepinfoGetdepmemberinfoPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdepmemberinfoOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  lastLoginDt: 10/05/2017
                  RowNum: 1
                  visitPrvName: JEFFREY LEPPO MD
                  rxStrength: 0.3-0
                  memFistName: Ambrose
                  rxNSDC: 00065853302
                  rxDispPrvState: MA
                  visitZip: 1201
                  rxDispPrvCity: PITTSFIELD
                  visitPrvNum: 70010000E05256
                  sythID: 3BA384290E4AEACFE41E59D423BFFD0FA78DE48B
                  clmSrvType: Medical
                  visitSvcDt: 01/12/2014
                  rxPrescPrvName: CHURYLA ALESIA MD
                  visitPhone: 413-395-7580
                  rxDrug: Ciprofloxacin-Dexamethasone Otic Susp 0.3-0.1%
                  rxPrescPrvNum: 70010000J47687
                  clmPrvName: LAWRENCE C RUSIN MD
                  visitStreet: 41 WACONAH ST
                  clmPaidAmt: 56.789999999999999
                  clmStatus: Complete
                  visitState: MA
                  clmICN: 26160740416000
                  numOfClmsSinceLastLogin: 0
                  clmAllowAmt: 76.790000000000006
                  rxDispPrvZip: 1201
                  rxPrescPhone: 413-499-2054
                  rxDispPrvPhone: 413-499-5411
                  clmDOS: 10/28/2015
                  visitCity: PITTSFIELD
                  rxDispDt: 01/06/2011
                  rxDispPrvNum: 70010002233043
                  memMidInit: B
                  memGender: F
                  rxDispPrvStreet: 501 NORTH ST
                  rxDispPrvName: RITE AID
                  memLastName: Jeri
                  clmPaymtStatus: Paid
                  hasDependents: false
                  visitSpec: CARDIOVASCULAR DISEASE
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depinfo/getdepmemberinfo
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "lastLoginDt":"10/05/2017",
                     "RowNum":1,
                     "visitPrvName":"JEFFREY LEPPO MD",
                     "rxStrength":"0.3-0",
                     "memFistName":"Ambrose",
                     "rxNSDC":"00065853302",
                     "rxDispPrvState":"MA",
                     "visitZip":1201,
                     "rxDispPrvCity":"PITTSFIELD",
                     "visitPrvNum":"70010000E05256",
                     "sythID":"3BA384290E4AEACFE41E59D423BFFD0FA78DE48B",
                     "clmSrvType":"Medical",
                     "visitSvcDt":"01/12/2014",
                     "rxPrescPrvName":"CHURYLA ALESIA MD",
                     "visitPhone":"413-395-7580",
                     "rxDrug":"Ciprofloxacin-Dexamethasone Otic Susp 0.3-0.1%",
                     "rxPrescPrvNum":"70010000J47687",
                     "clmPrvName":"LAWRENCE C RUSIN MD",
                     "visitStreet":"41 WACONAH ST",
                     "clmPaidAmt":56.79,
                     "clmStatus":"Complete",
                     "visitState":"MA",
                     "clmICN":26160740416000,
                     "numOfClmsSinceLastLogin":0,
                     "clmAllowAmt":76.79,
                     "rxDispPrvZip":1201,
                     "rxPrescPhone":"413-499-2054",
                     "rxDispPrvPhone":"413-499-5411",
                     "clmDOS":"10/28/2015",
                     "visitCity":"PITTSFIELD",
                     "rxDispDt":"01/06/2011",
                     "rxDispPrvNum":70010002233043,
                     "memMidInit":"B",
                     "memGender":"F",
                     "rxDispPrvStreet":"501 NORTH ST",
                     "rxDispPrvName":"RITE AID",
                     "memLastName":"Jeri",
                     "clmPaymtStatus":"Paid",
                     "hasDependents":false,
                     "visitSpec":"CARDIOVASCULAR DISEASE"
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getmemberinfo
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/depinfo/getdeplimitedplaninfo:
    post:
      description: 'TODO: Add Description'
      summary: getlimitedplaninfo
      tags:
      - Dep Info
      operationId: MemberV1DepinfoGetdeplimitedplaninfoPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetdeplimitedplaninfoOkResponse'
          examples:
            application/json:
              ROWSET:
                ROWS:
                  ProdDesc: BLUE CHOICE PLAN 2
                  OvCopay: 25
                  nurseLine: 1-888-247-2583
                  hasFAD: true
                  RowNum: 1
                  CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
                  acctNum: 4956444
                  BHCopay: 25
                  rxBin: 'RxBin: 003858 PCN: A4'
                  hasRxBenefit: true
                  planModel: true
                  FADNetID: 311005011
                  rxGRP: 'RxGRP: MASA'
                  hasBHBenefit: true
                  ERCopay: 100
                  MemServPh: 1-800-238-6616
                  hasDependents: false
                  grpNum: 004035141
                  preventCopay: 0
                totRows: 1
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/depinfo/getdeplimitedplaninfo
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
               "ROWSET":{
                  "ROWS":{
                     "ProdDesc":"BLUE CHOICE PLAN 2",
                     "OvCopay":25,
                     "nurseLine":"1-888-247-2583",
                     "hasFAD":true,
                     "RowNum":1,
                     "CopayInfo":"Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.",
                     "acctNum":4956444,
                     "BHCopay":25,
                     "rxBin":"RxBin: 003858 PCN: A4",
                     "hasRxBenefit":true,
                     "planModel":true,
                     "FADNetID":311005011,
                     "rxGRP":"RxGRP: MASA",
                     "hasBHBenefit":true,
                     "ERCopay":100,
                     "MemServPh":"1-800-238-6616",
                     "hasDependents":false,
                     "grpNum":"004035141",
                     "preventCopay":0
                  },
                  "totRows":1
               }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: getlimitedplaninfo
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/updatememprofile:
    post:
      description: >-
        Updates user/member profile with a key/value set.


        New input parameter "swrveid" 01/23/2018


        When the key = 'swrveid' updatememprofile will store the SWRVE ID in the users profile.  The ability for a single user id  to have multiple SWRVE IDs is supported.
      summary: updatememprofile
      tags:
      - Update Profile
      operationId: MemberV1InfoUpdatememprofilePost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/UpdatememprofileOkResponse'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/updatememprofile
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: updatememprofile
        x-testDescription: >-
          Updates user/member profile with a key/value set.


          New input parameter "swrveid" 01/23/2018


          When the key = 'swrveid' updatememprofile will store the SWRVE ID in the users profile.  The ability for a single user id  to have multiple SWRVE IDs is supported.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/info/updatemempreference:
    post:
      description: Updates user/member profile with a key/value set
      summary: updatemempreference
      tags:
      - Update Preference
      operationId: MemberV1InfoUpdatemempreferencePost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/UpdatemempreferenceOkResponse'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/info/updatemempreference
          headers:
            Content-Type: application/json
            Authorization: Bearer {{loginAccessToken}}
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: updatemempreference
        x-testDescription: Updates user/member profile with a key/value set
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/verifyfunuser:
    post:
      description: 'TODO: Add Description'
      summary: verifyuser
      tags:
      - Forgot User Name Verify User
      operationId: MemberV1AccessVerifyfunuserPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Verifyfunuser'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
              isauthenticated: FALSE
              regtype: MOBILE
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/verifyfunuser
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null,
                "isauthenticated": "FALSE",
                "regtype": "MOBILE"
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: verifyuser
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/verifyfunauthuser:
    post:
      description: 'TODO: Add Description'
      summary: verifyfunauthuser
      tags:
      - Forgot User Name Auth User
      operationId: MemberV1AccessVerifyfunauthuserPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Verifyfunauthuser'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/verifyfunauthuser
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: verifyfunauthuser
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/verifyuser:
    post:
      description: 'TODO: Add Description'
      summary: verifyuser
      tags:
      - Forgot Password Verify User
      operationId: MemberV1AccessVerifyuserPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Verifyuser'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/verifyuser
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: verifyuser
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/verifyresetac:
    post:
      description: 'TODO: Add Description'
      summary: verifyresetaccesscode
      tags:
      - Forgot Password Verify Acc Code & Reset Password
      operationId: MemberV1AccessVerifyresetacPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Verifyresetaccesscode'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/verifyresetac
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: verifyresetaccesscode
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /member/v1/access/resetpassword:
    post:
      description: 'TODO: Add Description'
      summary: resetpassword
      tags:
      - Forgot Password Verify Acc Code & Reset Password
      operationId: MemberV1AccessResetpasswordPost
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Resetpassword'
          examples:
            application/json:
              result: 0
              errormessage: 
              displaymessage: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /member/v1/access/resetpassword
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: RAW
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
          body: >-
            {
                "result": "0",
                "errormessage": null,
                "displaymessage": null
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: resetpassword
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  GetTokens:
    title: GetTokens
    example:
      result: 0
      key1id: 4572ceadc6414b4ab05b4bfb5e529cd6
      key1salt: ba59245803972f0f9d537a9327c82b224abb638b66e4247eb4541761e75af0a2
      key1iv: 42be0697ee13b7bb8295206993bcbb34
      key1phrase: 9f1df9d57bfd4e48a6504207e307b568
      key2id: d496f41c36ef46faaa5d82f0dc18d63a
      key2salt: 997fe31ec80c3ae6d043c5b1d06724837f008934df5a31ff7c1218e51f70395e
      key2iv: e92f914619080c3c366d50859786903c
      key2phrase: e25d9918054b486284a5e3167b695176
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      key1id:
        description: ''
        example: 4572ceadc6414b4ab05b4bfb5e529cd6
        type: string
      key1salt:
        description: ''
        example: ba59245803972f0f9d537a9327c82b224abb638b66e4247eb4541761e75af0a2
        type: string
      key1iv:
        description: ''
        example: 42be0697ee13b7bb8295206993bcbb34
        type: string
      key1phrase:
        description: ''
        example: 9f1df9d57bfd4e48a6504207e307b568
        type: string
      key2id:
        description: ''
        example: d496f41c36ef46faaa5d82f0dc18d63a
        type: string
      key2salt:
        description: ''
        example: 997fe31ec80c3ae6d043c5b1d06724837f008934df5a31ff7c1218e51f70395e
        type: string
      key2iv:
        description: ''
        example: e92f914619080c3c366d50859786903c
        type: string
      key2phrase:
        description: ''
        example: e25d9918054b486284a5e3167b695176
        type: string
    required:
    - result
    - key1id
    - key1salt
    - key1iv
    - key1phrase
    - key2id
    - key2salt
    - key2iv
    - key2phrase
  RegistrationEncryptRequest:
    title: registrationEncryptRequest
    example:
      mesg: '{"regtypein":"{{regtype}}","useridin":"{{userid}}","passwordin":"{{password}}","receiveinfo":"{{rinfo}}","tandcagreed":"{{tandc}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"regtypein":"{{regtype}}","useridin":"{{userid}}","passwordin":"{{password}}","receiveinfo":"{{rinfo}}","tandcagreed":"{{tandc}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  RegistermemAlreadyExists:
    title: registermem already exists
    example:
      result: -1
      errormessage: '[LDAP: error code 68 - Entry Already Exists]'
      displaymessage: ERROR DURING ADD USER OPERATION
    type: object
    properties:
      result:
        description: ''
        example: -1
        type: string
      errormessage:
        description: ''
        example: '[LDAP: error code 68 - Entry Already Exists]'
        type: string
      displaymessage:
        description: ''
        example: ERROR DURING ADD USER OPERATION
        type: string
    required:
    - result
    - errormessage
    - displaymessage
  RegistermemGoodResponse:
    title: registermem good response
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  LoginEncryptRequest:
    title: loginEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  MemberloginOkResponse:
    title: memberlogin ok response
    example:
      scopename: ACTIVE-AUTHENTICATED-AND-VERIFIED
      access_token: vAGFPKQcIF9RGO6acmTaWnOgMIO1
      refresh_token: UBsKDgxAPNJ8UOjRqvm5lGKTo22A2brb
      issued: 2017-Oct-05T19:48:59.665+00:00
      access_token_expires: 2017-Oct-05T19:58:58.665+00:00
      refresh_token_expires: 2017-Oct-05T19:48:59.665+00:00
    type: object
    properties:
      scopename:
        description: ''
        example: ACTIVE-AUTHENTICATED-AND-VERIFIED
        type: string
      access_token:
        description: ''
        example: vAGFPKQcIF9RGO6acmTaWnOgMIO1
        type: string
      refresh_token:
        description: ''
        example: UBsKDgxAPNJ8UOjRqvm5lGKTo22A2brb
        type: string
      issued:
        description: ''
        example: 2017-Oct-05T19:48:59.665+00:00
        type: string
      access_token_expires:
        description: ''
        example: 2017-Oct-05T19:58:58.665+00:00
        type: string
      refresh_token_expires:
        description: ''
        example: 2017-Oct-05T19:48:59.665+00:00
        type: string
    required:
    - scopename
    - access_token
    - refresh_token
    - issued
    - access_token_expires
    - refresh_token_expires
  ChangePasswordEncryptRequest:
    title: changePasswordEncryptRequest
    example:
      mesg: >-
        {
            "useridin":"{{userid}}",
            "currentpassword":"{{password}}",
            "newpassword":"{{newpassword}}",
            "key2id":"{{Ekey2id}}"
          }
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: >-
          {
              "useridin":"{{userid}}",
              "currentpassword":"{{password}}",
              "newpassword":"{{newpassword}}",
              "key2id":"{{Ekey2id}}"
            }
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  MemberloginOkResponse12:
    title: memberlogin ok response12
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  Refreshtoken:
    title: refreshtoken
    example:
      scopename: ACTIVE-AUTHENTICATED-AND-VERIFIED
      refresh_count: 1
      access_token: a3Po81MzuXq1JSuv8kE13V289GKR
      refresh_token: d6944yLuFyqoexbioXAmtE6b7HsPlKr6
      issued: 2017-Nov-09T14:37:26.552+00:00
      access_token_expires: 2017-Nov-09T14:47:25.552+00:00
      refresh_token_expires: 2017-Nov-09T15:07:25.552+00:00
    type: object
    properties:
      scopename:
        description: ''
        example: ACTIVE-AUTHENTICATED-AND-VERIFIED
        type: string
      refresh_count:
        description: ''
        example: 1
        type: string
      access_token:
        description: ''
        example: a3Po81MzuXq1JSuv8kE13V289GKR
        type: string
      refresh_token:
        description: ''
        example: d6944yLuFyqoexbioXAmtE6b7HsPlKr6
        type: string
      issued:
        description: ''
        example: 2017-Nov-09T14:37:26.552+00:00
        type: string
      access_token_expires:
        description: ''
        example: 2017-Nov-09T14:47:25.552+00:00
        type: string
      refresh_token_expires:
        description: ''
        example: 2017-Nov-09T15:07:25.552+00:00
        type: string
    required:
    - scopename
    - refresh_count
    - access_token
    - refresh_token
    - issued
    - access_token_expires
    - refresh_token_expires
  InfoDecryptRequest:
    title: infoDecryptRequest
    example:
      message: '{{encResp}}'
      key2id: '{{Ekey2id}}'
    type: object
    properties:
      message:
        description: ''
        example: '{{encResp}}'
        type: string
      key2id:
        description: ''
        example: '{{Ekey2id}}'
        type: string
    required:
    - message
    - key2id
  RegistermemOkResponse:
    title: registermem ok response
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  SendaccesscodeEncryptRequest:
    title: sendaccesscodeEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  SendaccesscodeOkResponse:
    title: sendaccesscode ok response
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  VerifyaccesscodeEncryptRequest:
    title: verifyaccesscodeEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","accesscode":"{{accesscode}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","accesscode":"{{accesscode}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  Verifyaccesscode:
    title: verifyaccesscode
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  LoginEncrypt2Request:
    title: loginEncrypt2Request
    example:
      mesg: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  UpdatememauthEncrypt1Request:
    title: updatememauthEncrypt1Request
    example:
      mesg: '{"useridin":"{{userid}}","fname":"{{fname}}","lname":"{{lname}}","dob":"{{dob}}","email":"{{email}}","mobile":"{{mobile}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","fname":"{{fname}}","lname":"{{lname}}","dob":"{{dob}}","email":"{{email}}","mobile":"{{mobile}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  UpdatememauthinfoOkResponse:
    title: updatememauthinfo ok response
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  GetmemauthinfoEncryptRequest:
    title: getmemauthinfoEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetmemauthinfoOkResponse:
    title: getmemauthinfo ok response
    example:
      ROWSET:
        ROWS:
          lastName: FASIFITLIETTECDE
          lastAuthResult: 0,
          recCreateTS: 06-OCT-17 05.53.06.795115 AM
          DOB: 01/22/1989
          memNum: XXH008302462
          userID: bdtest10061051@test.com
          authAttemptCnt: 1
          mobilePhone: 6172468219
          authAllowed: true
          recUpdateTS: 06-OCT-17 06.25.11.417625 AM
          firstName: BRIAN
          rowNum: 1
          emailAdd: myotherEmail@test.com
          memSuffix: 11
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET'
    required:
    - ROWSET
  ROWSET:
    title: ROWSET
    example:
      ROWS:
        lastName: FASIFITLIETTECDE
        lastAuthResult: 0,
        recCreateTS: 06-OCT-17 05.53.06.795115 AM
        DOB: 01/22/1989
        memNum: XXH008302462
        userID: bdtest10061051@test.com
        authAttemptCnt: 1
        mobilePhone: 6172468219
        authAllowed: true
        recUpdateTS: 06-OCT-17 06.25.11.417625 AM
        firstName: BRIAN
        rowNum: 1
        emailAdd: myotherEmail@test.com
        memSuffix: 11
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS:
    title: ROWS
    example:
      lastName: FASIFITLIETTECDE
      lastAuthResult: 0,
      recCreateTS: 06-OCT-17 05.53.06.795115 AM
      DOB: 01/22/1989
      memNum: XXH008302462
      userID: bdtest10061051@test.com
      authAttemptCnt: 1
      mobilePhone: 6172468219
      authAllowed: true
      recUpdateTS: 06-OCT-17 06.25.11.417625 AM
      firstName: BRIAN
      rowNum: 1
      emailAdd: myotherEmail@test.com
      memSuffix: 11
    type: object
    properties:
      lastName:
        description: ''
        example: FASIFITLIETTECDE
        type: string
      lastAuthResult:
        description: ''
        example: 0,
        type: string
      recCreateTS:
        description: ''
        example: 06-OCT-17 05.53.06.795115 AM
        type: string
      DOB:
        description: ''
        example: 01/22/1989
        type: string
      memNum:
        description: ''
        example: XXH008302462
        type: string
      userID:
        description: ''
        example: bdtest10061051@test.com
        type: string
      authAttemptCnt:
        description: ''
        example: 1
        type: integer
        format: int32
      mobilePhone:
        description: ''
        example: 6172468219
        type: integer
        format: int64
      authAllowed:
        description: ''
        example: true
        type: boolean
      recUpdateTS:
        description: ''
        example: 06-OCT-17 06.25.11.417625 AM
        type: string
      firstName:
        description: ''
        example: BRIAN
        type: string
      rowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      emailAdd:
        description: ''
        example: myotherEmail@test.com
        type: string
      memSuffix:
        description: ''
        example: 11
        type: integer
        format: int32
    required:
    - lastName
    - lastAuthResult
    - recCreateTS
    - DOB
    - memNum
    - userID
    - authAttemptCnt
    - mobilePhone
    - authAllowed
    - recUpdateTS
    - firstName
    - rowNum
    - emailAdd
    - memSuffix
  MemauthinfoDecryptRequest:
    title: memauthinfoDecryptRequest
    example:
      message: '{{encResp}}'
      key2id: '{{Ekey2id}}'
    type: object
    properties:
      message:
        description: ''
        example: '{{encResp}}'
        type: string
      key2id:
        description: ''
        example: '{{Ekey2id}}'
        type: string
    required:
    - message
    - key2id
  AuthwithssnEncryptRequest:
    title: authwithssnEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","ssn":"{{ssn}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","ssn":"{{ssn}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  AuthwithssnOkResponse:
    title: authwithssn ok response
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  Login2EncryptRequest:
    title: login2EncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  MeminfoEncryptRequest:
    title: meminfoEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetcardfrontOkResponse:
    title: getcardfront ok response
    example:
      ROWSET:
        ROWS:
          PCPPh: 978-269-0030
          nurseLine: 1-888-247-2583
          RowNum: 1
          CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
          isDependent: false
          hasHEQ: false
          hasALG: false
          BHCopay: 15
          dispSuitcase: true
          PCPState: MA
          rxBin: 'RxBin: 003858 PCN: A4'
          PCPZip: 1810
          MemName: BRIAN TTECDE
          ERCopay: 50
          MemServPh: 1-800-238-6616
          PCPSpecified: true
          PCPStreet: 140 HAVERHILL ST
          cardMemID: XXH99902462
          ProdDesc: BLUE CHOICE PLAN 2
          OvCopay: 20/15
          hasFAD: true
          PCPName: PRATHIMA CHALOORI
          rxSpecified: true
          addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
          PCPCity: ANDOVER
          FADNetID: 311005011
          rxGRP: 'RxGRP: MASA'
          PrevCopay: 0
          hasDependents: false
          MemSuff: 11
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET64'
    required:
    - ROWSET
  ROWSET64:
    title: ROWSET64
    example:
      ROWS:
        PCPPh: 978-269-0030
        nurseLine: 1-888-247-2583
        RowNum: 1
        CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        isDependent: false
        hasHEQ: false
        hasALG: false
        BHCopay: 15
        dispSuitcase: true
        PCPState: MA
        rxBin: 'RxBin: 003858 PCN: A4'
        PCPZip: 1810
        MemName: BRIAN TTECDE
        ERCopay: 50
        MemServPh: 1-800-238-6616
        PCPSpecified: true
        PCPStreet: 140 HAVERHILL ST
        cardMemID: XXH99902462
        ProdDesc: BLUE CHOICE PLAN 2
        OvCopay: 20/15
        hasFAD: true
        PCPName: PRATHIMA CHALOORI
        rxSpecified: true
        addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
        PCPCity: ANDOVER
        FADNetID: 311005011
        rxGRP: 'RxGRP: MASA'
        PrevCopay: 0
        hasDependents: false
        MemSuff: 11
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS65'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS65:
    title: ROWS65
    example:
      PCPPh: 978-269-0030
      nurseLine: 1-888-247-2583
      RowNum: 1
      CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
      isDependent: false
      hasHEQ: false
      hasALG: false
      BHCopay: 15
      dispSuitcase: true
      PCPState: MA
      rxBin: 'RxBin: 003858 PCN: A4'
      PCPZip: 1810
      MemName: BRIAN TTECDE
      ERCopay: 50
      MemServPh: 1-800-238-6616
      PCPSpecified: true
      PCPStreet: 140 HAVERHILL ST
      cardMemID: XXH99902462
      ProdDesc: BLUE CHOICE PLAN 2
      OvCopay: 20/15
      hasFAD: true
      PCPName: PRATHIMA CHALOORI
      rxSpecified: true
      addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
      PCPCity: ANDOVER
      FADNetID: 311005011
      rxGRP: 'RxGRP: MASA'
      PrevCopay: 0
      hasDependents: false
      MemSuff: 11
    type: object
    properties:
      PCPPh:
        description: ''
        example: 978-269-0030
        type: string
      nurseLine:
        description: ''
        example: 1-888-247-2583
        type: string
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      CopayInfo:
        description: ''
        example: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        type: string
      isDependent:
        description: ''
        example: false
        type: boolean
      hasHEQ:
        description: ''
        example: false
        type: boolean
      hasALG:
        description: ''
        example: false
        type: boolean
      BHCopay:
        description: ''
        example: 15
        type: integer
        format: int32
      dispSuitcase:
        description: ''
        example: true
        type: boolean
      PCPState:
        description: ''
        example: MA
        type: string
      rxBin:
        description: ''
        example: 'RxBin: 003858 PCN: A4'
        type: string
      PCPZip:
        description: ''
        example: 1810
        type: integer
        format: int32
      MemName:
        description: ''
        example: BRIAN TTECDE
        type: string
      ERCopay:
        description: ''
        example: 50
        type: integer
        format: int32
      MemServPh:
        description: ''
        example: 1-800-238-6616
        type: string
      PCPSpecified:
        description: ''
        example: true
        type: boolean
      PCPStreet:
        description: ''
        example: 140 HAVERHILL ST
        type: string
      cardMemID:
        description: ''
        example: XXH99902462
        type: string
      ProdDesc:
        description: ''
        example: BLUE CHOICE PLAN 2
        type: string
      OvCopay:
        description: ''
        example: 20/15
        type: string
      hasFAD:
        description: ''
        example: true
        type: boolean
      PCPName:
        description: ''
        example: PRATHIMA CHALOORI
        type: string
      rxSpecified:
        description: ''
        example: true
        type: boolean
      addressStr:
        description: ''
        example: 140 HAVERHILL ST, ANDOVER MA 01810
        type: string
      PCPCity:
        description: ''
        example: ANDOVER
        type: string
      FADNetID:
        description: ''
        example: 311005011
        type: integer
        format: int32
      rxGRP:
        description: ''
        example: 'RxGRP: MASA'
        type: string
      PrevCopay:
        description: ''
        example: 0
        type: integer
        format: int32
      hasDependents:
        description: ''
        example: false
        type: boolean
      MemSuff:
        description: ''
        example: 11
        type: integer
        format: int32
    required:
    - PCPPh
    - nurseLine
    - RowNum
    - CopayInfo
    - isDependent
    - hasHEQ
    - hasALG
    - BHCopay
    - dispSuitcase
    - PCPState
    - rxBin
    - PCPZip
    - MemName
    - ERCopay
    - MemServPh
    - PCPSpecified
    - PCPStreet
    - cardMemID
    - ProdDesc
    - OvCopay
    - hasFAD
    - PCPName
    - rxSpecified
    - addressStr
    - PCPCity
    - FADNetID
    - rxGRP
    - PrevCopay
    - hasDependents
    - MemSuff
  GetcardbackOkResponse:
    title: getcardback ok response
    example:
      ROWSET:
        ROWS:
        - RowNum: 1
          CopyLoc: Top
          Copy: www.bluecrossma.com
        - RowNum: 2
          CopyLoc: Para1
          Copy: 'Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours.'
        - RowNum: 3
          CopyLoc: Para2
          Copy: This card is for identification only. It is not proof of membership, nor does it guarantee coverage.
        - RowNum: 4
          CopyLoc: Para3
          Copy: 'To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number.'
        - RowNum: 5
          CopyLoc: Para4
          Copy: Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426
        - RowNum: 6
          CopyLoc: Para5
          Copy: Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims.
        - RowNum: 7
          CopyLoc: Bottom
          Copy: Express Scripts, Inc. Pharmacy benefits administrator
        totRows: 7
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET67'
    required:
    - ROWSET
  ROWSET67:
    title: ROWSET67
    example:
      ROWS:
      - RowNum: 1
        CopyLoc: Top
        Copy: www.bluecrossma.com
      - RowNum: 2
        CopyLoc: Para1
        Copy: 'Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours.'
      - RowNum: 3
        CopyLoc: Para2
        Copy: This card is for identification only. It is not proof of membership, nor does it guarantee coverage.
      - RowNum: 4
        CopyLoc: Para3
        Copy: 'To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number.'
      - RowNum: 5
        CopyLoc: Para4
        Copy: Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426
      - RowNum: 6
        CopyLoc: Para5
        Copy: Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims.
      - RowNum: 7
        CopyLoc: Bottom
        Copy: Express Scripts, Inc. Pharmacy benefits administrator
      totRows: 7
    type: object
    properties:
      ROWS:
        description: ''
        example:
        - RowNum: 1
          CopyLoc: Top
          Copy: www.bluecrossma.com
        - RowNum: 2
          CopyLoc: Para1
          Copy: 'Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours.'
        - RowNum: 3
          CopyLoc: Para2
          Copy: This card is for identification only. It is not proof of membership, nor does it guarantee coverage.
        - RowNum: 4
          CopyLoc: Para3
          Copy: 'To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number.'
        - RowNum: 5
          CopyLoc: Para4
          Copy: Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426
        - RowNum: 6
          CopyLoc: Para5
          Copy: Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims.
        - RowNum: 7
          CopyLoc: Bottom
          Copy: Express Scripts, Inc. Pharmacy benefits administrator
        type: array
        items:
          $ref: '#/definitions/ROWS68'
      totRows:
        description: ''
        example: 7
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS68:
    title: ROWS68
    example:
      RowNum: 1
      CopyLoc: Top
      Copy: www.bluecrossma.com
    type: object
    properties:
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      CopyLoc:
        description: ''
        example: Top
        type: string
      Copy:
        description: ''
        example: www.bluecrossma.com
        type: string
    required:
    - RowNum
    - CopyLoc
    - Copy
  GetdependentlistOkResponse:
    title: getdependentlist ok response
    example:
      ROWSET:
        ROWS:
        - depSuffix: 10
          depFirstName: Your
          depRelationsip: Dependent
          depLastName: Dependent1
          depMemNum: 990000080900010
          depCardId: XXH008302462
          depId: 123456789
        - depSuffix: 11
          depFirstName: Your
          depRelationsip: Dependent
          depLastName: Dependent2
          depMemNum: 990000081000011
          depCardId: XXH008302462
          depId: 123456789
        totRows: 2
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET70'
    required:
    - ROWSET
  ROWSET70:
    title: ROWSET70
    example:
      ROWS:
      - depSuffix: 10
        depFirstName: Your
        depRelationsip: Dependent
        depLastName: Dependent1
        depMemNum: 990000080900010
        depCardId: XXH008302462
        depId: 123456789
      - depSuffix: 11
        depFirstName: Your
        depRelationsip: Dependent
        depLastName: Dependent2
        depMemNum: 990000081000011
        depCardId: XXH008302462
        depId: 123456789
      totRows: 2
    type: object
    properties:
      ROWS:
        description: ''
        example:
        - depSuffix: 10
          depFirstName: Your
          depRelationsip: Dependent
          depLastName: Dependent1
          depMemNum: 990000080900010
          depCardId: XXH008302462
          depId: 123456789
        - depSuffix: 11
          depFirstName: Your
          depRelationsip: Dependent
          depLastName: Dependent2
          depMemNum: 990000081000011
          depCardId: XXH008302462
          depId: 123456789
        type: array
        items:
          $ref: '#/definitions/ROWS71'
      totRows:
        description: ''
        example: 2
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS71:
    title: ROWS71
    example:
      depSuffix: 10
      depFirstName: Your
      depRelationsip: Dependent
      depLastName: Dependent1
      depMemNum: 990000080900010
      depCardId: XXH008302462
      depId: 123456789
    type: object
    properties:
      depSuffix:
        description: ''
        example: 10
        type: integer
        format: int32
      depFirstName:
        description: ''
        example: Your
        type: string
      depRelationsip:
        description: ''
        example: Dependent
        type: string
      depLastName:
        description: ''
        example: Dependent1
        type: string
      depMemNum:
        description: ''
        example: 990000080900010
        type: integer
        format: int64
      depCardId:
        description: ''
        example: XXH008302462
        type: string
      depId:
        description: ''
        example: 123456789
        type: integer
        format: int32
    required:
    - depSuffix
    - depFirstName
    - depRelationsip
    - depLastName
    - depMemNum
    - depCardId
    - depId
  GetmemberinfoOkResponse:
    title: getmemberinfo ok response
    example:
      ROWSET:
        ROWS:
          lastLoginDt: 10/06/2017
          RowNum: 1
          visitPrvName: PAUL J GEMIS MD
          rxStrength: 50-12
          memFistName: Brian
          rxNSDC: 00093736756
          rxDispPrvState: MA
          visitZip: 1810
          rxDispPrvCity: CHICOPEE
          visitPrvNum: 70010000J10454
          sythID: 7F8B9103A7633EFFCD594E7A39D0F6CF6AE2DBF4
          clmSrvType: Medical
          visitSvcDt: 08/31/2011
          rxPrescPrvName: PATRICK J BOYCE MD
          visitPhone: 978-475-4202
          rxDrug: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 MG
          rxPrescPrvNum: 70010000J06753
          clmPrvName: THE GENERAL HOSPITAL CORPORATION DBA
          visitStreet: 140 HAVERHILL STREET
          clmPaidAmt: 106.73
          clmStatus: Complete
          visitState: MA
          clmICN: 20162840657102
          numOfClmsSinceLastLogin: 0
          clmAllowAmt: 106.73
          rxDispPrvZip: 1013
          rxPrescPhone: 413-534-1665
          rxDispPrvPhone: 413-592-4696
          clmDOS: 10/04/2016
          visitCity: ANDOVER
          rxDispDt: 12/20/2013
          rxDispPrvNum: 70010002234071
          memMidInit: B
          memGender: M
          rxDispPrvStreet: 577 MEADOW ST
          rxDispPrvName: RITE AID
          memLastName: Friqgulde
          clmPaymtStatus: Paid
          hasDependents: false
          visitSpec: GENERAL SURGERY
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET73'
    required:
    - ROWSET
  ROWSET73:
    title: ROWSET73
    example:
      ROWS:
        lastLoginDt: 10/06/2017
        RowNum: 1
        visitPrvName: PAUL J GEMIS MD
        rxStrength: 50-12
        memFistName: Brian
        rxNSDC: 00093736756
        rxDispPrvState: MA
        visitZip: 1810
        rxDispPrvCity: CHICOPEE
        visitPrvNum: 70010000J10454
        sythID: 7F8B9103A7633EFFCD594E7A39D0F6CF6AE2DBF4
        clmSrvType: Medical
        visitSvcDt: 08/31/2011
        rxPrescPrvName: PATRICK J BOYCE MD
        visitPhone: 978-475-4202
        rxDrug: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 MG
        rxPrescPrvNum: 70010000J06753
        clmPrvName: THE GENERAL HOSPITAL CORPORATION DBA
        visitStreet: 140 HAVERHILL STREET
        clmPaidAmt: 106.73
        clmStatus: Complete
        visitState: MA
        clmICN: 20162840657102
        numOfClmsSinceLastLogin: 0
        clmAllowAmt: 106.73
        rxDispPrvZip: 1013
        rxPrescPhone: 413-534-1665
        rxDispPrvPhone: 413-592-4696
        clmDOS: 10/04/2016
        visitCity: ANDOVER
        rxDispDt: 12/20/2013
        rxDispPrvNum: 70010002234071
        memMidInit: B
        memGender: M
        rxDispPrvStreet: 577 MEADOW ST
        rxDispPrvName: RITE AID
        memLastName: Friqgulde
        clmPaymtStatus: Paid
        hasDependents: false
        visitSpec: GENERAL SURGERY
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS74'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS74:
    title: ROWS74
    example:
      lastLoginDt: 10/06/2017
      RowNum: 1
      visitPrvName: PAUL J GEMIS MD
      rxStrength: 50-12
      memFistName: Brian
      rxNSDC: 00093736756
      rxDispPrvState: MA
      visitZip: 1810
      rxDispPrvCity: CHICOPEE
      visitPrvNum: 70010000J10454
      sythID: 7F8B9103A7633EFFCD594E7A39D0F6CF6AE2DBF4
      clmSrvType: Medical
      visitSvcDt: 08/31/2011
      rxPrescPrvName: PATRICK J BOYCE MD
      visitPhone: 978-475-4202
      rxDrug: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 MG
      rxPrescPrvNum: 70010000J06753
      clmPrvName: THE GENERAL HOSPITAL CORPORATION DBA
      visitStreet: 140 HAVERHILL STREET
      clmPaidAmt: 106.73
      clmStatus: Complete
      visitState: MA
      clmICN: 20162840657102
      numOfClmsSinceLastLogin: 0
      clmAllowAmt: 106.73
      rxDispPrvZip: 1013
      rxPrescPhone: 413-534-1665
      rxDispPrvPhone: 413-592-4696
      clmDOS: 10/04/2016
      visitCity: ANDOVER
      rxDispDt: 12/20/2013
      rxDispPrvNum: 70010002234071
      memMidInit: B
      memGender: M
      rxDispPrvStreet: 577 MEADOW ST
      rxDispPrvName: RITE AID
      memLastName: Friqgulde
      clmPaymtStatus: Paid
      hasDependents: false
      visitSpec: GENERAL SURGERY
    type: object
    properties:
      lastLoginDt:
        description: ''
        example: 10/06/2017
        type: string
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      visitPrvName:
        description: ''
        example: PAUL J GEMIS MD
        type: string
      rxStrength:
        description: ''
        example: 50-12
        type: string
      memFistName:
        description: ''
        example: Brian
        type: string
      rxNSDC:
        description: ''
        example: 00093736756
        type: string
      rxDispPrvState:
        description: ''
        example: MA
        type: string
      visitZip:
        description: ''
        example: 1810
        type: integer
        format: int32
      rxDispPrvCity:
        description: ''
        example: CHICOPEE
        type: string
      visitPrvNum:
        description: ''
        example: 70010000J10454
        type: string
      sythID:
        description: ''
        example: 7F8B9103A7633EFFCD594E7A39D0F6CF6AE2DBF4
        type: string
      clmSrvType:
        description: ''
        example: Medical
        type: string
      visitSvcDt:
        description: ''
        example: 08/31/2011
        type: string
      rxPrescPrvName:
        description: ''
        example: PATRICK J BOYCE MD
        type: string
      visitPhone:
        description: ''
        example: 978-475-4202
        type: string
      rxDrug:
        description: ''
        example: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 MG
        type: string
      rxPrescPrvNum:
        description: ''
        example: 70010000J06753
        type: string
      clmPrvName:
        description: ''
        example: THE GENERAL HOSPITAL CORPORATION DBA
        type: string
      visitStreet:
        description: ''
        example: 140 HAVERHILL STREET
        type: string
      clmPaidAmt:
        description: ''
        example: 106.73
        type: number
        format: double
      clmStatus:
        description: ''
        example: Complete
        type: string
      visitState:
        description: ''
        example: MA
        type: string
      clmICN:
        description: ''
        example: 20162840657102
        type: integer
        format: int64
      numOfClmsSinceLastLogin:
        description: ''
        example: 0
        type: integer
        format: int32
      clmAllowAmt:
        description: ''
        example: 106.73
        type: number
        format: double
      rxDispPrvZip:
        description: ''
        example: 1013
        type: integer
        format: int32
      rxPrescPhone:
        description: ''
        example: 413-534-1665
        type: string
      rxDispPrvPhone:
        description: ''
        example: 413-592-4696
        type: string
      clmDOS:
        description: ''
        example: 10/04/2016
        type: string
      visitCity:
        description: ''
        example: ANDOVER
        type: string
      rxDispDt:
        description: ''
        example: 12/20/2013
        type: string
      rxDispPrvNum:
        description: ''
        example: 70010002234071
        type: integer
        format: int64
      memMidInit:
        description: ''
        example: B
        type: string
      memGender:
        description: ''
        example: M
        type: string
      rxDispPrvStreet:
        description: ''
        example: 577 MEADOW ST
        type: string
      rxDispPrvName:
        description: ''
        example: RITE AID
        type: string
      memLastName:
        description: ''
        example: Friqgulde
        type: string
      clmPaymtStatus:
        description: ''
        example: Paid
        type: string
      hasDependents:
        description: ''
        example: false
        type: boolean
      visitSpec:
        description: ''
        example: GENERAL SURGERY
        type: string
    required:
    - lastLoginDt
    - RowNum
    - visitPrvName
    - rxStrength
    - memFistName
    - rxNSDC
    - rxDispPrvState
    - visitZip
    - rxDispPrvCity
    - visitPrvNum
    - sythID
    - clmSrvType
    - visitSvcDt
    - rxPrescPrvName
    - visitPhone
    - rxDrug
    - rxPrescPrvNum
    - clmPrvName
    - visitStreet
    - clmPaidAmt
    - clmStatus
    - visitState
    - clmICN
    - numOfClmsSinceLastLogin
    - clmAllowAmt
    - rxDispPrvZip
    - rxPrescPhone
    - rxDispPrvPhone
    - clmDOS
    - visitCity
    - rxDispDt
    - rxDispPrvNum
    - memMidInit
    - memGender
    - rxDispPrvStreet
    - rxDispPrvName
    - memLastName
    - clmPaymtStatus
    - hasDependents
    - visitSpec
  Getlimitedplaninfo:
    title: getlimitedplaninfo
    example:
      ROWSET:
        ROWS:
          ProdDesc: BLUE CHOICE PLAN 2
          OvCopay: 20/15
          nurseLine: 1-888-247-2583
          hasFAD: true
          RowNum: 1
          CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
          acctNum: 0001420
          BHCopay: 15
          rxBin: 'RxBin: 003858 PCN: A4'
          hasRxBenefit: true
          planModel: true
          FADNetID: 311005011
          rxGRP: 'RxGRP: MASA'
          hasBHBenefit: true
          ERCopay: 50
          MemServPh: 1-800-238-6616
          hasDependents: false
          grpNum: 004000943
          preventCopay: 0
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET76'
    required:
    - ROWSET
  ROWSET76:
    title: ROWSET76
    example:
      ROWS:
        ProdDesc: BLUE CHOICE PLAN 2
        OvCopay: 20/15
        nurseLine: 1-888-247-2583
        hasFAD: true
        RowNum: 1
        CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        acctNum: 0001420
        BHCopay: 15
        rxBin: 'RxBin: 003858 PCN: A4'
        hasRxBenefit: true
        planModel: true
        FADNetID: 311005011
        rxGRP: 'RxGRP: MASA'
        hasBHBenefit: true
        ERCopay: 50
        MemServPh: 1-800-238-6616
        hasDependents: false
        grpNum: 004000943
        preventCopay: 0
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS77'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS77:
    title: ROWS77
    example:
      ProdDesc: BLUE CHOICE PLAN 2
      OvCopay: 20/15
      nurseLine: 1-888-247-2583
      hasFAD: true
      RowNum: 1
      CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
      acctNum: 0001420
      BHCopay: 15
      rxBin: 'RxBin: 003858 PCN: A4'
      hasRxBenefit: true
      planModel: true
      FADNetID: 311005011
      rxGRP: 'RxGRP: MASA'
      hasBHBenefit: true
      ERCopay: 50
      MemServPh: 1-800-238-6616
      hasDependents: false
      grpNum: 004000943
      preventCopay: 0
    type: object
    properties:
      ProdDesc:
        description: ''
        example: BLUE CHOICE PLAN 2
        type: string
      OvCopay:
        description: ''
        example: 20/15
        type: string
      nurseLine:
        description: ''
        example: 1-888-247-2583
        type: string
      hasFAD:
        description: ''
        example: true
        type: boolean
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      CopayInfo:
        description: ''
        example: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        type: string
      acctNum:
        description: ''
        example: 0001420
        type: string
      BHCopay:
        description: ''
        example: 15
        type: integer
        format: int32
      rxBin:
        description: ''
        example: 'RxBin: 003858 PCN: A4'
        type: string
      hasRxBenefit:
        description: ''
        example: true
        type: boolean
      planModel:
        description: ''
        example: true
        type: boolean
      FADNetID:
        description: ''
        example: 311005011
        type: integer
        format: int32
      rxGRP:
        description: ''
        example: 'RxGRP: MASA'
        type: string
      hasBHBenefit:
        description: ''
        example: true
        type: boolean
      ERCopay:
        description: ''
        example: 50
        type: integer
        format: int32
      MemServPh:
        description: ''
        example: 1-800-238-6616
        type: string
      hasDependents:
        description: ''
        example: false
        type: boolean
      grpNum:
        description: ''
        example: 004000943
        type: string
      preventCopay:
        description: ''
        example: 0
        type: integer
        format: int32
    required:
    - ProdDesc
    - OvCopay
    - nurseLine
    - hasFAD
    - RowNum
    - CopayInfo
    - acctNum
    - BHCopay
    - rxBin
    - hasRxBenefit
    - planModel
    - FADNetID
    - rxGRP
    - hasBHBenefit
    - ERCopay
    - MemServPh
    - hasDependents
    - grpNum
    - preventCopay
  GetmemprofileOkResponse:
    title: getmemprofile ok response
    example:
      ROWSET:
        ROWS:
          usr_shoesize: 9.5
          source: usr
          usr_weight: 150
          usr_lastlogin: 10/06/2017
          usr_prevlogin: 10/05/2017
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET79'
    required:
    - ROWSET
  ROWSET79:
    title: ROWSET79
    example:
      ROWS:
        usr_shoesize: 9.5
        source: usr
        usr_weight: 150
        usr_lastlogin: 10/06/2017
        usr_prevlogin: 10/05/2017
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS80'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS80:
    title: ROWS80
    example:
      usr_shoesize: 9.5
      source: usr
      usr_weight: 150
      usr_lastlogin: 10/06/2017
      usr_prevlogin: 10/05/2017
    type: object
    properties:
      usr_shoesize:
        description: ''
        example: 9.5
        type: number
        format: double
      source:
        description: ''
        example: usr
        type: string
      usr_weight:
        description: ''
        example: 150
        type: integer
        format: int32
      usr_lastlogin:
        description: ''
        example: 10/06/2017
        type: string
      usr_prevlogin:
        description: ''
        example: 10/05/2017
        type: string
    required:
    - usr_shoesize
    - source
    - usr_weight
    - usr_lastlogin
    - usr_prevlogin
  GetmempreferenceOkResponse:
    title: getmempreference ok response
    example:
      ROWSET:
        ROWS:
          source: pref
          pref_eobviaemail: No
          pref_besttimetocall: Never
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET82'
    required:
    - ROWSET
  ROWSET82:
    title: ROWSET82
    example:
      ROWS:
        source: pref
        pref_eobviaemail: No
        pref_besttimetocall: Never
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS83'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS83:
    title: ROWS83
    example:
      source: pref
      pref_eobviaemail: No
      pref_besttimetocall: Never
    type: object
    properties:
      source:
        description: ''
        example: pref
        type: string
      pref_eobviaemail:
        description: ''
        example: No
        type: string
      pref_besttimetocall:
        description: ''
        example: Never
        type: string
    required:
    - source
    - pref_eobviaemail
    - pref_besttimetocall
  GetrecentvisitsOkResponse:
    title: getrecentvisits ok response
    example:
      ROWSET:
        ROWS:
        - RowNum: 5
          PrvState: MA
          PrvPh: 978-269-0030
          IsPCP: true
          PrvType: Physician
          PrvName: PRATHIMA CHALOORI MD
          PrvSpec: Family Practice
          PrvCity: Andover
          addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
          DOS: 10/29/13
          PrvZip: 1810
          hasAddress: true
          PrvStreet: 140 Haverhill St
        - RowNum: 2
          PrvState: MA
          PrvPh: 781-245-5200
          IsPCP: false
          PrvType: Physician
          PrvName: CHARLES D EVANS MD
          PrvSpec: Ophthalmology
          PrvCity: Wakefield
          addressStr: 669 MAIN ST, WAKEFIELD MA 01880
          DOS: 08/24/12
          PrvZip: 1880
          hasAddress: true
          PrvStreet: 669 Main St
        - RowNum: 3
          PrvState: MA
          PrvPh: 978-683-4000
          IsPCP: false
          PrvType: Physician
          PrvName: MEGHA G JOSHI MD
          PrvSpec: Clinical Pathology
          PrvCity: Lawrence
          addressStr: 1 GENERAL ST, LAWRENCE MA 01841
          DOS: 12/28/11
          PrvZip: 1841
          hasAddress: true
          PrvStreet: 1 General St
        - RowNum: 4
          PrvState: MA
          PrvPh: 978-683-4000
          IsPCP: false
          PrvType: Physician
          PrvName: MADHAVA K SETTY MD
          PrvSpec: Hospital Based Anesthesiologists
          PrvCity: Lawrence
          addressStr: 1 GENERAL ST, LAWRENCE MA 01842
          DOS: 12/28/11
          PrvZip: 1842
          hasAddress: true
          PrvStreet: 1 General St
        - RowNum: 1
          PrvState: MA
          PrvPh: 978-475-4202
          IsPCP: false
          PrvType: Physician
          PrvName: PAUL J GEMIS MD
          PrvSpec: General Surgery
          PrvCity: Andover
          addressStr: 140 HAVERHILL STREET, ANDOVER MA 01810
          DOS: 08/31/11
          PrvZip: 1810
          hasAddress: true
          PrvStreet: 140 Haverhill Street
        totRows: 5
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET85'
    required:
    - ROWSET
  ROWSET85:
    title: ROWSET85
    example:
      ROWS:
      - RowNum: 5
        PrvState: MA
        PrvPh: 978-269-0030
        IsPCP: true
        PrvType: Physician
        PrvName: PRATHIMA CHALOORI MD
        PrvSpec: Family Practice
        PrvCity: Andover
        addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
        DOS: 10/29/13
        PrvZip: 1810
        hasAddress: true
        PrvStreet: 140 Haverhill St
      - RowNum: 2
        PrvState: MA
        PrvPh: 781-245-5200
        IsPCP: false
        PrvType: Physician
        PrvName: CHARLES D EVANS MD
        PrvSpec: Ophthalmology
        PrvCity: Wakefield
        addressStr: 669 MAIN ST, WAKEFIELD MA 01880
        DOS: 08/24/12
        PrvZip: 1880
        hasAddress: true
        PrvStreet: 669 Main St
      - RowNum: 3
        PrvState: MA
        PrvPh: 978-683-4000
        IsPCP: false
        PrvType: Physician
        PrvName: MEGHA G JOSHI MD
        PrvSpec: Clinical Pathology
        PrvCity: Lawrence
        addressStr: 1 GENERAL ST, LAWRENCE MA 01841
        DOS: 12/28/11
        PrvZip: 1841
        hasAddress: true
        PrvStreet: 1 General St
      - RowNum: 4
        PrvState: MA
        PrvPh: 978-683-4000
        IsPCP: false
        PrvType: Physician
        PrvName: MADHAVA K SETTY MD
        PrvSpec: Hospital Based Anesthesiologists
        PrvCity: Lawrence
        addressStr: 1 GENERAL ST, LAWRENCE MA 01842
        DOS: 12/28/11
        PrvZip: 1842
        hasAddress: true
        PrvStreet: 1 General St
      - RowNum: 1
        PrvState: MA
        PrvPh: 978-475-4202
        IsPCP: false
        PrvType: Physician
        PrvName: PAUL J GEMIS MD
        PrvSpec: General Surgery
        PrvCity: Andover
        addressStr: 140 HAVERHILL STREET, ANDOVER MA 01810
        DOS: 08/31/11
        PrvZip: 1810
        hasAddress: true
        PrvStreet: 140 Haverhill Street
      totRows: 5
    type: object
    properties:
      ROWS:
        description: ''
        example:
        - RowNum: 5
          PrvState: MA
          PrvPh: 978-269-0030
          IsPCP: true
          PrvType: Physician
          PrvName: PRATHIMA CHALOORI MD
          PrvSpec: Family Practice
          PrvCity: Andover
          addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
          DOS: 10/29/13
          PrvZip: 1810
          hasAddress: true
          PrvStreet: 140 Haverhill St
        - RowNum: 2
          PrvState: MA
          PrvPh: 781-245-5200
          IsPCP: false
          PrvType: Physician
          PrvName: CHARLES D EVANS MD
          PrvSpec: Ophthalmology
          PrvCity: Wakefield
          addressStr: 669 MAIN ST, WAKEFIELD MA 01880
          DOS: 08/24/12
          PrvZip: 1880
          hasAddress: true
          PrvStreet: 669 Main St
        - RowNum: 3
          PrvState: MA
          PrvPh: 978-683-4000
          IsPCP: false
          PrvType: Physician
          PrvName: MEGHA G JOSHI MD
          PrvSpec: Clinical Pathology
          PrvCity: Lawrence
          addressStr: 1 GENERAL ST, LAWRENCE MA 01841
          DOS: 12/28/11
          PrvZip: 1841
          hasAddress: true
          PrvStreet: 1 General St
        - RowNum: 4
          PrvState: MA
          PrvPh: 978-683-4000
          IsPCP: false
          PrvType: Physician
          PrvName: MADHAVA K SETTY MD
          PrvSpec: Hospital Based Anesthesiologists
          PrvCity: Lawrence
          addressStr: 1 GENERAL ST, LAWRENCE MA 01842
          DOS: 12/28/11
          PrvZip: 1842
          hasAddress: true
          PrvStreet: 1 General St
        - RowNum: 1
          PrvState: MA
          PrvPh: 978-475-4202
          IsPCP: false
          PrvType: Physician
          PrvName: PAUL J GEMIS MD
          PrvSpec: General Surgery
          PrvCity: Andover
          addressStr: 140 HAVERHILL STREET, ANDOVER MA 01810
          DOS: 08/31/11
          PrvZip: 1810
          hasAddress: true
          PrvStreet: 140 Haverhill Street
        type: array
        items:
          $ref: '#/definitions/ROWS86'
      totRows:
        description: ''
        example: 5
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS86:
    title: ROWS86
    example:
      RowNum: 5
      PrvState: MA
      PrvPh: 978-269-0030
      IsPCP: true
      PrvType: Physician
      PrvName: PRATHIMA CHALOORI MD
      PrvSpec: Family Practice
      PrvCity: Andover
      addressStr: 140 HAVERHILL ST, ANDOVER MA 01810
      DOS: 10/29/13
      PrvZip: 1810
      hasAddress: true
      PrvStreet: 140 Haverhill St
    type: object
    properties:
      RowNum:
        description: ''
        example: 5
        type: integer
        format: int32
      PrvState:
        description: ''
        example: MA
        type: string
      PrvPh:
        description: ''
        example: 978-269-0030
        type: string
      IsPCP:
        description: ''
        example: true
        type: boolean
      PrvType:
        description: ''
        example: Physician
        type: string
      PrvName:
        description: ''
        example: PRATHIMA CHALOORI MD
        type: string
      PrvSpec:
        description: ''
        example: Family Practice
        type: string
      PrvCity:
        description: ''
        example: Andover
        type: string
      addressStr:
        description: ''
        example: 140 HAVERHILL ST, ANDOVER MA 01810
        type: string
      DOS:
        description: ''
        example: 10/29/13
        type: string
      PrvZip:
        description: ''
        example: 1810
        type: integer
        format: int32
      hasAddress:
        description: ''
        example: true
        type: boolean
      PrvStreet:
        description: ''
        example: 140 Haverhill St
        type: string
    required:
    - RowNum
    - PrvState
    - PrvPh
    - IsPCP
    - PrvType
    - PrvName
    - PrvSpec
    - PrvCity
    - addressStr
    - DOS
    - PrvZip
    - hasAddress
    - PrvStreet
  GetrecentrxOkResponse:
    title: getrecentrx ok response
    example:
      ROWSET:
        ROWS:
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 1
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 12/20/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 50-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Losartan-Hydrochlorothiaz
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 4
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 04/25/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 50-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Losartan-Hydrochlorothiaz
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 2
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 04/22/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 10-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Lisinopril-Hydrochlorothi
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 3
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 03/15/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 10-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Lisinopril-Hydrochlorothi
        - DispStreet: 577 Meadow St
          PrescPh: 413-420-2210
          RowNum: 5
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Amoxicillin (Trihydrate) Cap 500 Mg
          PrescName: ALAN D SAMPSON DMD
          DispDt: 02/25/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 500 M
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Amoxicillin
        totRows: 5
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET88'
    required:
    - ROWSET
  ROWSET88:
    title: ROWSET88
    example:
      ROWS:
      - DispStreet: 577 Meadow St
        PrescPh: 413-534-1665
        RowNum: 1
        DispName: RITE AID
        QtyDisp: 30
        DispPh: 413-592-4696
        GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
        PrescName: PATRICK J BOYCE MD
        DispDt: 12/20/13
        DispCity: Chicopee
        addressStr: 577 MEADOW ST, CHICOPEE MA 01013
        Strength: 50-12
        DispZip: 1013
        DispState: MA
        hasAddress: true
        BrandName: Losartan-Hydrochlorothiaz
      - DispStreet: 577 Meadow St
        PrescPh: 413-534-1665
        RowNum: 4
        DispName: RITE AID
        QtyDisp: 30
        DispPh: 413-592-4696
        GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
        PrescName: PATRICK J BOYCE MD
        DispDt: 04/25/13
        DispCity: Chicopee
        addressStr: 577 MEADOW ST, CHICOPEE MA 01013
        Strength: 50-12
        DispZip: 1013
        DispState: MA
        hasAddress: true
        BrandName: Losartan-Hydrochlorothiaz
      - DispStreet: 577 Meadow St
        PrescPh: 413-534-1665
        RowNum: 2
        DispName: RITE AID
        QtyDisp: 30
        DispPh: 413-592-4696
        GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
        PrescName: PATRICK J BOYCE MD
        DispDt: 04/22/13
        DispCity: Chicopee
        addressStr: 577 MEADOW ST, CHICOPEE MA 01013
        Strength: 10-12
        DispZip: 1013
        DispState: MA
        hasAddress: true
        BrandName: Lisinopril-Hydrochlorothi
      - DispStreet: 577 Meadow St
        PrescPh: 413-534-1665
        RowNum: 3
        DispName: RITE AID
        QtyDisp: 30
        DispPh: 413-592-4696
        GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
        PrescName: PATRICK J BOYCE MD
        DispDt: 03/15/13
        DispCity: Chicopee
        addressStr: 577 MEADOW ST, CHICOPEE MA 01013
        Strength: 10-12
        DispZip: 1013
        DispState: MA
        hasAddress: true
        BrandName: Lisinopril-Hydrochlorothi
      - DispStreet: 577 Meadow St
        PrescPh: 413-420-2210
        RowNum: 5
        DispName: RITE AID
        QtyDisp: 30
        DispPh: 413-592-4696
        GenericName: Amoxicillin (Trihydrate) Cap 500 Mg
        PrescName: ALAN D SAMPSON DMD
        DispDt: 02/25/13
        DispCity: Chicopee
        addressStr: 577 MEADOW ST, CHICOPEE MA 01013
        Strength: 500 M
        DispZip: 1013
        DispState: MA
        hasAddress: true
        BrandName: Amoxicillin
      totRows: 5
    type: object
    properties:
      ROWS:
        description: ''
        example:
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 1
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 12/20/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 50-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Losartan-Hydrochlorothiaz
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 4
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 04/25/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 50-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Losartan-Hydrochlorothiaz
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 2
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 04/22/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 10-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Lisinopril-Hydrochlorothi
        - DispStreet: 577 Meadow St
          PrescPh: 413-534-1665
          RowNum: 3
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Lisinopril & Hydrochlorothiazide Tab 10-12.5 Mg
          PrescName: PATRICK J BOYCE MD
          DispDt: 03/15/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 10-12
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Lisinopril-Hydrochlorothi
        - DispStreet: 577 Meadow St
          PrescPh: 413-420-2210
          RowNum: 5
          DispName: RITE AID
          QtyDisp: 30
          DispPh: 413-592-4696
          GenericName: Amoxicillin (Trihydrate) Cap 500 Mg
          PrescName: ALAN D SAMPSON DMD
          DispDt: 02/25/13
          DispCity: Chicopee
          addressStr: 577 MEADOW ST, CHICOPEE MA 01013
          Strength: 500 M
          DispZip: 1013
          DispState: MA
          hasAddress: true
          BrandName: Amoxicillin
        type: array
        items:
          $ref: '#/definitions/ROWS89'
      totRows:
        description: ''
        example: 5
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS89:
    title: ROWS89
    example:
      DispStreet: 577 Meadow St
      PrescPh: 413-534-1665
      RowNum: 1
      DispName: RITE AID
      QtyDisp: 30
      DispPh: 413-592-4696
      GenericName: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
      PrescName: PATRICK J BOYCE MD
      DispDt: 12/20/13
      DispCity: Chicopee
      addressStr: 577 MEADOW ST, CHICOPEE MA 01013
      Strength: 50-12
      DispZip: 1013
      DispState: MA
      hasAddress: true
      BrandName: Losartan-Hydrochlorothiaz
    type: object
    properties:
      DispStreet:
        description: ''
        example: 577 Meadow St
        type: string
      PrescPh:
        description: ''
        example: 413-534-1665
        type: string
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      DispName:
        description: ''
        example: RITE AID
        type: string
      QtyDisp:
        description: ''
        example: 30
        type: integer
        format: int32
      DispPh:
        description: ''
        example: 413-592-4696
        type: string
      GenericName:
        description: ''
        example: Losartan Potassium & Hydrochlorothiazide Tab 50-12.5 Mg
        type: string
      PrescName:
        description: ''
        example: PATRICK J BOYCE MD
        type: string
      DispDt:
        description: ''
        example: 12/20/13
        type: string
      DispCity:
        description: ''
        example: Chicopee
        type: string
      addressStr:
        description: ''
        example: 577 MEADOW ST, CHICOPEE MA 01013
        type: string
      Strength:
        description: ''
        example: 50-12
        type: string
      DispZip:
        description: ''
        example: 1013
        type: integer
        format: int32
      DispState:
        description: ''
        example: MA
        type: string
      hasAddress:
        description: ''
        example: true
        type: boolean
      BrandName:
        description: ''
        example: Losartan-Hydrochlorothiaz
        type: string
    required:
    - DispStreet
    - PrescPh
    - RowNum
    - DispName
    - QtyDisp
    - DispPh
    - GenericName
    - PrescName
    - DispDt
    - DispCity
    - addressStr
    - Strength
    - DispZip
    - DispState
    - hasAddress
    - BrandName
  GetalertsSampleResponse:
    title: getalerts Sample Response
    example:
      ROWSET:
        ROWS:
        - messageID: 100
          RowNum: 1
          AlertShortTxt: Use Mail Order Pharmacy
          AlertLongTxt: You're using a retail pharmacy for one or more of your prescriptions when you could use mail order. This can save you money. Please consult your pharmacist
        - messageID: 500
          RowNum: 2
          AlertShortTxt: Fitness Benefit
          AlertLongTxt: Collect your fitness benefit by downloading the form and submitting it.
        totRows: 2
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET91'
    required:
    - ROWSET
  ROWSET91:
    title: ROWSET91
    example:
      ROWS:
      - messageID: 100
        RowNum: 1
        AlertShortTxt: Use Mail Order Pharmacy
        AlertLongTxt: You're using a retail pharmacy for one or more of your prescriptions when you could use mail order. This can save you money. Please consult your pharmacist
      - messageID: 500
        RowNum: 2
        AlertShortTxt: Fitness Benefit
        AlertLongTxt: Collect your fitness benefit by downloading the form and submitting it.
      totRows: 2
    type: object
    properties:
      ROWS:
        description: ''
        example:
        - messageID: 100
          RowNum: 1
          AlertShortTxt: Use Mail Order Pharmacy
          AlertLongTxt: You're using a retail pharmacy for one or more of your prescriptions when you could use mail order. This can save you money. Please consult your pharmacist
        - messageID: 500
          RowNum: 2
          AlertShortTxt: Fitness Benefit
          AlertLongTxt: Collect your fitness benefit by downloading the form and submitting it.
        type: array
        items:
          $ref: '#/definitions/ROWS92'
      totRows:
        description: ''
        example: 2
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS92:
    title: ROWS92
    example:
      messageID: 100
      RowNum: 1
      AlertShortTxt: Use Mail Order Pharmacy
      AlertLongTxt: You're using a retail pharmacy for one or more of your prescriptions when you could use mail order. This can save you money. Please consult your pharmacist
    type: object
    properties:
      messageID:
        description: ''
        example: 100
        type: integer
        format: int32
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      AlertShortTxt:
        description: ''
        example: Use Mail Order Pharmacy
        type: string
      AlertLongTxt:
        description: ''
        example: You're using a retail pharmacy for one or more of your prescriptions when you could use mail order. This can save you money. Please consult your pharmacist
        type: string
    required:
    - messageID
    - RowNum
    - AlertShortTxt
    - AlertLongTxt
  AlegeusGetfinancebalanceAlgmsgDecrypted:
    title: Alegeus getfinancebalance algmsg DEcrypted
    example:
      AccountDetailInfo: 
      AccountDisplayHeader: Health Reimbursement Arrangement
      AccountDisplayOptions: 142606335
      AccountType: HRD
      AccountTypeOptions: 196608
      AcctStatusCde: 1
      AdditionalDeposits: 0
      AnnualElection: 2000
      Balance: 2000
      BalanceDue: 0
      DataPartnerOptions: 0
      DisplayableFields:
      - AlternativeFieldName: Account Description
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: AccountDisplayHeader
      - AlternativeFieldName: Annual Election
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: AnnualElection
      - AlternativeFieldName: Contributions YTD
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: TotalContributions
      - AlternativeFieldName: Paid YTD
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: Payments
      - AlternativeFieldName: Additional Deposits
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: AdditionalDeposits
      - AlternativeFieldName: Plan Start
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: PlanStartDate
      - AlternativeFieldName: Plan End
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: PlanEndDate
      - AlternativeFieldName: Last Day to Submit Claims
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: SubmitClaimsLastDate
      - AlternativeFieldName: Balance
        DisplayOptions: 2
        DisplaySpecifications: 0
        OriginalFieldName: Balance
      ExternalBankAccounts: 
      ExternalFunded: 
      FlexAccountKey: 4283
      FlexAcctId: 0000004283
      GracePeriodEndDte: 20180531
      HSABalance: 2000
      HraAcct: false
      IsWCABank: 
      OptInStatus: 
      Payments: 0
      PlanEndDate: 20180531
      PlanId: 002356194
      PlanOptions2: 0
      PlanStartDate: 20170601
      PlanYear: 1
      PortfolioBalance: 0
      Priority: 14
      ProductPartnerId: ''
      SubmitClaimsLastDate: 2018-05-31T05:00:00.0000000+00:00
      TotalContributions: 2000
      TotalHSABalance: 2000
    type: object
    properties:
      AccountDetailInfo:
        description: ''
      AccountDisplayHeader:
        description: ''
        example: Health Reimbursement Arrangement
        type: string
      AccountDisplayOptions:
        description: ''
        example: 142606335
        type: integer
        format: int32
      AccountType:
        description: ''
        example: HRD
        type: string
      AccountTypeOptions:
        description: ''
        example: 196608
        type: integer
        format: int32
      AcctStatusCde:
        description: ''
        example: 1
        type: integer
        format: int32
      AdditionalDeposits:
        description: ''
        example: 0
        type: number
        format: double
      AnnualElection:
        description: ''
        example: 2000
        type: number
        format: double
      Balance:
        description: ''
        example: 2000
        type: number
        format: double
      BalanceDue:
        description: ''
        example: 0
        type: number
        format: double
      DataPartnerOptions:
        description: ''
        example: 0
        type: integer
        format: int32
      DisplayableFields:
        description: ''
        example:
        - AlternativeFieldName: Account Description
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: AccountDisplayHeader
        - AlternativeFieldName: Annual Election
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: AnnualElection
        - AlternativeFieldName: Contributions YTD
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: TotalContributions
        - AlternativeFieldName: Paid YTD
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: Payments
        - AlternativeFieldName: Additional Deposits
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: AdditionalDeposits
        - AlternativeFieldName: Plan Start
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: PlanStartDate
        - AlternativeFieldName: Plan End
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: PlanEndDate
        - AlternativeFieldName: Last Day to Submit Claims
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: SubmitClaimsLastDate
        - AlternativeFieldName: Balance
          DisplayOptions: 2
          DisplaySpecifications: 0
          OriginalFieldName: Balance
        type: array
        items:
          $ref: '#/definitions/DisplayableField'
      ExternalBankAccounts:
        description: ''
      ExternalFunded:
        description: ''
      FlexAccountKey:
        description: ''
        example: 4283
        type: integer
        format: int32
      FlexAcctId:
        description: ''
        example: 0000004283
        type: string
      GracePeriodEndDte:
        description: ''
        example: 20180531
        type: string
      HSABalance:
        description: ''
        example: 2000
        type: number
        format: double
      HraAcct:
        description: ''
        example: false
        type: boolean
      IsWCABank:
        description: ''
      OptInStatus:
        description: ''
      Payments:
        description: ''
        example: 0
        type: number
        format: double
      PlanEndDate:
        description: ''
        example: 20180531
        type: string
      PlanId:
        description: ''
        example: 002356194
        type: string
      PlanOptions2:
        description: ''
        example: 0
        type: integer
        format: int32
      PlanStartDate:
        description: ''
        example: 20170601
        type: string
      PlanYear:
        description: ''
        example: 1
        type: integer
        format: int32
      PortfolioBalance:
        description: ''
        example: 0
        type: integer
        format: int32
      Priority:
        description: ''
        example: 14
        type: integer
        format: int32
      ProductPartnerId:
        description: ''
        type: string
      SubmitClaimsLastDate:
        description: ''
        example: 5/31/2018 5:00:00 AM
        type: string
      TotalContributions:
        description: ''
        example: 2000
        type: number
        format: double
      TotalHSABalance:
        description: ''
        example: 2000
        type: number
        format: double
    required:
    - AccountDetailInfo
    - AccountDisplayHeader
    - AccountDisplayOptions
    - AccountType
    - AccountTypeOptions
    - AcctStatusCde
    - AdditionalDeposits
    - AnnualElection
    - Balance
    - BalanceDue
    - DataPartnerOptions
    - DisplayableFields
    - ExternalBankAccounts
    - ExternalFunded
    - FlexAccountKey
    - FlexAcctId
    - GracePeriodEndDte
    - HSABalance
    - HraAcct
    - IsWCABank
    - OptInStatus
    - Payments
    - PlanEndDate
    - PlanId
    - PlanOptions2
    - PlanStartDate
    - PlanYear
    - PortfolioBalance
    - Priority
    - ProductPartnerId
    - SubmitClaimsLastDate
    - TotalContributions
    - TotalHSABalance
  DisplayableField:
    title: DisplayableField
    example:
      AlternativeFieldName: Account Description
      DisplayOptions: 2
      DisplaySpecifications: 0
      OriginalFieldName: AccountDisplayHeader
    type: object
    properties:
      AlternativeFieldName:
        description: ''
        example: Account Description
        type: string
      DisplayOptions:
        description: ''
        example: 2
        type: integer
        format: int32
      DisplaySpecifications:
        description: ''
        example: 0
        type: integer
        format: int32
      OriginalFieldName:
        description: ''
        example: AccountDisplayHeader
        type: string
    required:
    - AlternativeFieldName
    - DisplayOptions
    - DisplaySpecifications
    - OriginalFieldName
  GetclaimsEncryptRequest:
    title: getclaimsEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetclaimsOkResponse:
    title: getclaims ok response
    example:
      ROWSET:
        ROWS:
        - lastDOS: 03/01/2017
          provName: CVS
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 03/01/2017
          intClmNum: 941703011131691
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Pharmacy
          youOweAmt: -3.2999999999999998
          prescribingProvName: ERIC M WEIL MD
          memLName: Friguliettecde
          DOS: 03/01/2017
          billedAmt: -9.7400000000000002
        - lastDOS: 01/17/2017
          provName: PAUL S GAMBER JR PC
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 01/17/2017
          intClmNum: 36170190186200
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Dental
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 01/17/2017
          billedAmt: 148
        - lastDOS: 11/23/2016
          provName: ORTHOCARE MEDICALEQUIPMENT LLC
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 11/23/2016
          intClmNum: 26163420861100
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 17.5
          memLName: Friguliettecde
          DOS: 11/23/2016
          billedAmt: 329.33999999999997
        - lastDOS: 10/04/2016
          provName: THE GENERAL HOSPITAL CORPORATION DBA
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 10/04/2016
          intClmNum: 20162840657102
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 10/04/2016
          billedAmt: 693
        - lastDOS: 07/23/2016
          provName: CVS
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 07/23/2016
          intClmNum: 941607231020935
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Pharmacy
          youOweAmt: 15
          prescribingProvName: HARSHA V GOPAL MD
          memLName: Friguliettecde
          DOS: 07/23/2016
          billedAmt: 92.739999999999995
        - lastDOS: 12/21/2015
          provName: NORTHEAST HOSPITALCORPORATION
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 12/21/2015
          intClmNum: 20160080161000
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 20
          memLName: Friguliettecde
          DOS: 12/21/2015
          billedAmt: 188
        - lastDOS: 12/09/2015
          provName: VERNICK AND GOPALLLC
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 12/09/2015
          intClmNum: 26153490527900
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 12/09/2015
          billedAmt: 325
        - lastDOS: 09/28/2015
          provName: THE GENERAL HOSPITAL CORPORATION DBA
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 09/28/2015
          intClmNum: 20152780457000
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 09/28/2015
          billedAmt: 218
        totRows: 8
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET120'
    required:
    - ROWSET
  ROWSET120:
    title: ROWSET120
    example:
      ROWS:
      - lastDOS: 03/01/2017
        provName: CVS
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 03/01/2017
        intClmNum: 941703011131691
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Pharmacy
        youOweAmt: -3.2999999999999998
        prescribingProvName: ERIC M WEIL MD
        memLName: Friguliettecde
        DOS: 03/01/2017
        billedAmt: -9.7400000000000002
      - lastDOS: 01/17/2017
        provName: PAUL S GAMBER JR PC
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 01/17/2017
        intClmNum: 36170190186200
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Dental
        youOweAmt: 0
        memLName: Friguliettecde
        DOS: 01/17/2017
        billedAmt: 148
      - lastDOS: 11/23/2016
        provName: ORTHOCARE MEDICALEQUIPMENT LLC
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 11/23/2016
        intClmNum: 26163420861100
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Medical
        youOweAmt: 17.5
        memLName: Friguliettecde
        DOS: 11/23/2016
        billedAmt: 329.33999999999997
      - lastDOS: 10/04/2016
        provName: THE GENERAL HOSPITAL CORPORATION DBA
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 10/04/2016
        intClmNum: 20162840657102
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Medical
        youOweAmt: 0
        memLName: Friguliettecde
        DOS: 10/04/2016
        billedAmt: 693
      - lastDOS: 07/23/2016
        provName: CVS
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 07/23/2016
        intClmNum: 941607231020935
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Pharmacy
        youOweAmt: 15
        prescribingProvName: HARSHA V GOPAL MD
        memLName: Friguliettecde
        DOS: 07/23/2016
        billedAmt: 92.739999999999995
      - lastDOS: 12/21/2015
        provName: NORTHEAST HOSPITALCORPORATION
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 12/21/2015
        intClmNum: 20160080161000
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Medical
        youOweAmt: 20
        memLName: Friguliettecde
        DOS: 12/21/2015
        billedAmt: 188
      - lastDOS: 12/09/2015
        provName: VERNICK AND GOPALLLC
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 12/09/2015
        intClmNum: 26153490527900
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Medical
        youOweAmt: 0
        memLName: Friguliettecde
        DOS: 12/09/2015
        billedAmt: 325
      - lastDOS: 09/28/2015
        provName: THE GENERAL HOSPITAL CORPORATION DBA
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 09/28/2015
        intClmNum: 20152780457000
        subNum: 0083024620000
        memFName: Brian
        memNum: 0083024620000011
        memDOB: 01/22/1989
        svcType: Medical
        youOweAmt: 0
        memLName: Friguliettecde
        DOS: 09/28/2015
        billedAmt: 218
      totRows: 8
    type: object
    properties:
      ROWS:
        description: ''
        example:
        - lastDOS: 03/01/2017
          provName: CVS
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 03/01/2017
          intClmNum: 941703011131691
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Pharmacy
          youOweAmt: -3.2999999999999998
          prescribingProvName: ERIC M WEIL MD
          memLName: Friguliettecde
          DOS: 03/01/2017
          billedAmt: -9.7400000000000002
        - lastDOS: 01/17/2017
          provName: PAUL S GAMBER JR PC
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 01/17/2017
          intClmNum: 36170190186200
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Dental
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 01/17/2017
          billedAmt: 148
        - lastDOS: 11/23/2016
          provName: ORTHOCARE MEDICALEQUIPMENT LLC
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 11/23/2016
          intClmNum: 26163420861100
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 17.5
          memLName: Friguliettecde
          DOS: 11/23/2016
          billedAmt: 329.33999999999997
        - lastDOS: 10/04/2016
          provName: THE GENERAL HOSPITAL CORPORATION DBA
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 10/04/2016
          intClmNum: 20162840657102
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 10/04/2016
          billedAmt: 693
        - lastDOS: 07/23/2016
          provName: CVS
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 07/23/2016
          intClmNum: 941607231020935
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Pharmacy
          youOweAmt: 15
          prescribingProvName: HARSHA V GOPAL MD
          memLName: Friguliettecde
          DOS: 07/23/2016
          billedAmt: 92.739999999999995
        - lastDOS: 12/21/2015
          provName: NORTHEAST HOSPITALCORPORATION
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 12/21/2015
          intClmNum: 20160080161000
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 20
          memLName: Friguliettecde
          DOS: 12/21/2015
          billedAmt: 188
        - lastDOS: 12/09/2015
          provName: VERNICK AND GOPALLLC
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 12/09/2015
          intClmNum: 26153490527900
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 12/09/2015
          billedAmt: 325
        - lastDOS: 09/28/2015
          provName: THE GENERAL HOSPITAL CORPORATION DBA
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 09/28/2015
          intClmNum: 20152780457000
          subNum: 0083024620000
          memFName: Brian
          memNum: 0083024620000011
          memDOB: 01/22/1989
          svcType: Medical
          youOweAmt: 0
          memLName: Friguliettecde
          DOS: 09/28/2015
          billedAmt: 218
        type: array
        items:
          $ref: '#/definitions/ROWS121'
      totRows:
        description: ''
        example: 8
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS121:
    title: ROWS121
    example:
      lastDOS: 03/01/2017
      provName: CVS
      isDependent: false
      clm_paymt_stat: Paid
      clmStatus: Complete
      firstDOS: 03/01/2017
      intClmNum: 941703011131691
      subNum: 0083024620000
      memFName: Brian
      memNum: 0083024620000011
      memDOB: 01/22/1989
      svcType: Pharmacy
      youOweAmt: -3.2999999999999998
      prescribingProvName: ERIC M WEIL MD
      memLName: Friguliettecde
      DOS: 03/01/2017
      billedAmt: -9.7400000000000002
    type: object
    properties:
      lastDOS:
        description: ''
        example: 03/01/2017
        type: string
      provName:
        description: ''
        example: CVS
        type: string
      isDependent:
        description: ''
        example: false
        type: boolean
      clm_paymt_stat:
        description: ''
        example: Paid
        type: string
      clmStatus:
        description: ''
        example: Complete
        type: string
      firstDOS:
        description: ''
        example: 03/01/2017
        type: string
      intClmNum:
        description: ''
        example: 941703011131691
        type: integer
        format: int64
      subNum:
        description: ''
        example: 0083024620000
        type: string
      memFName:
        description: ''
        example: Brian
        type: string
      memNum:
        description: ''
        example: 0083024620000011
        type: string
      memDOB:
        description: ''
        example: 01/22/1989
        type: string
      svcType:
        description: ''
        example: Pharmacy
        type: string
      youOweAmt:
        description: ''
        example: -3.2999999999999998
        type: number
        format: double
      memLName:
        description: ''
        example: Friguliettecde
        type: string
      DOS:
        description: ''
        example: 03/01/2017
        type: string
      billedAmt:
        description: ''
        example: -9.7400000000000002
        type: number
        format: double
      prescribingProvName:
        description: ''
        example: ERIC M WEIL MD
        type: string
    required:
    - lastDOS
    - provName
    - isDependent
    - clm_paymt_stat
    - clmStatus
    - firstDOS
    - intClmNum
    - subNum
    - memFName
    - memNum
    - memDOB
    - svcType
    - youOweAmt
    - memLName
    - DOS
    - billedAmt
  GetclaimsfordaterangeEncryptRequest:
    title: getclaimsfordaterangeEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","param1":"01/01/2017","param2":"12/31/2017"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","param1":"01/01/2017","param2":"12/31/2017"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetclaimsfordaterangeOkResponse:
    title: getclaimsfordaterange ok response
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET124'
    required:
    - ROWSET
  ROWSET124:
    title: ROWSET124
    type: object
    properties:
      ROWS:
        description: ''
        type: array
        items:
          $ref: '#/definitions/ROWS125'
      totRows:
        description: ''
        example: 3
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS125:
    title: ROWS125
    type: object
    properties:
      lastDOS:
        description: ''
        example: 05/03/2017
        type: string
      provName:
        description: ''
        example: THE GENERAL HOSPITAL CORPORATION DBA
        type: string
      isDependent:
        description: ''
        example: false
        type: boolean
      clm_paymt_stat:
        description: ''
        example: Paid
        type: string
      clmStatus:
        description: ''
        example: Complete
        type: string
      firstDOS:
        description: ''
        example: 05/03/2017
        type: string
      intClmNum:
        description: ''
        example: 20171292407200
        type: integer
        format: int64
      subNum:
        description: ''
        example: 0083024620000
        type: string
      memFName:
        description: ''
        example: Brian
        type: string
      memNum:
        description: ''
        example: 0083024620000011
        type: string
      memDOB:
        description: ''
        example: 01/22/1989
        type: string
      svcType:
        description: ''
        example: Medical
        type: string
      youOweAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      memLName:
        description: ''
        example: Friguliettecde
        type: string
      DOS:
        description: ''
        example: 05/03/2017
        type: string
      billedAmt:
        description: ''
        example: 245
        type: integer
        format: int32
      prescribingProvName:
        description: ''
        example: ERIC M WEIL MD
        type: string
    required:
    - lastDOS
    - provName
    - isDependent
    - clm_paymt_stat
    - clmStatus
    - firstDOS
    - intClmNum
    - subNum
    - memFName
    - memNum
    - memDOB
    - svcType
    - youOweAmt
    - memLName
    - DOS
    - billedAmt
  GetclaimsforICNEncryptRequest:
    title: getclaimsforICNEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","param1":"{{clmICN}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","param1":"{{clmICN}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetclaimsforicnOkResponse:
    title: getclaimsforICN ok response
    example:
      ROWSET:
        ROWS:
          alldAmt: 146.63
          coinsAmt: 0
          notCovAmt: 0
          provName: VERNICK AND GOPALLLC
          RowNum: 1
          copayAmt: 0
          clmStatus: Complete
          paidAmt: 146.63
          otherInsurance: 0
          recDt: 12/14/2015
          intClmNum: 26153490527900
          serviceType: Medical
          subNum: 0015880090000
          msgSpecified: true
          memFName: Sadegh
          memNum: 0015880090000000
          svcType: Technical Component
          youOweAmt: 0
          prvSubAmt: 325
          statusDt: 12/15/2015
          dedAmt: 0
          clmPaymtStatus: Paid
          DOS: 12/09/2015
          lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET128'
    required:
    - ROWSET
  ROWSET128:
    title: ROWSET128
    example:
      ROWS:
        alldAmt: 146.63
        coinsAmt: 0
        notCovAmt: 0
        provName: VERNICK AND GOPALLLC
        RowNum: 1
        copayAmt: 0
        clmStatus: Complete
        paidAmt: 146.63
        otherInsurance: 0
        recDt: 12/14/2015
        intClmNum: 26153490527900
        serviceType: Medical
        subNum: 0015880090000
        msgSpecified: true
        memFName: Sadegh
        memNum: 0015880090000000
        svcType: Technical Component
        youOweAmt: 0
        prvSubAmt: 325
        statusDt: 12/15/2015
        dedAmt: 0
        clmPaymtStatus: Paid
        DOS: 12/09/2015
        lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS129'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS129:
    title: ROWS129
    example:
      alldAmt: 146.63
      coinsAmt: 0
      notCovAmt: 0
      provName: VERNICK AND GOPALLLC
      RowNum: 1
      copayAmt: 0
      clmStatus: Complete
      paidAmt: 146.63
      otherInsurance: 0
      recDt: 12/14/2015
      intClmNum: 26153490527900
      serviceType: Medical
      subNum: 0015880090000
      msgSpecified: true
      memFName: Sadegh
      memNum: 0015880090000000
      svcType: Technical Component
      youOweAmt: 0
      prvSubAmt: 325
      statusDt: 12/15/2015
      dedAmt: 0
      clmPaymtStatus: Paid
      DOS: 12/09/2015
      lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
    type: object
    properties:
      alldAmt:
        description: ''
        example: 146.63
        type: number
        format: double
      coinsAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      notCovAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      provName:
        description: ''
        example: VERNICK AND GOPALLLC
        type: string
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      copayAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      clmStatus:
        description: ''
        example: Complete
        type: string
      paidAmt:
        description: ''
        example: 146.63
        type: number
        format: double
      otherInsurance:
        description: ''
        example: 0
        type: integer
        format: int32
      recDt:
        description: ''
        example: 12/14/2015
        type: string
      intClmNum:
        description: ''
        example: 26153490527900
        type: integer
        format: int64
      serviceType:
        description: ''
        example: Medical
        type: string
      subNum:
        description: ''
        example: 0015880090000
        type: string
      msgSpecified:
        description: ''
        example: true
        type: boolean
      memFName:
        description: ''
        example: Sadegh
        type: string
      memNum:
        description: ''
        example: 0015880090000000
        type: string
      svcType:
        description: ''
        example: Technical Component
        type: string
      youOweAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      prvSubAmt:
        description: ''
        example: 325
        type: integer
        format: int32
      statusDt:
        description: ''
        example: 12/15/2015
        type: string
      dedAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      clmPaymtStatus:
        description: ''
        example: Paid
        type: string
      DOS:
        description: ''
        example: 12/09/2015
        type: string
      lineMsg:
        description: ''
        example: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
        type: string
    required:
    - alldAmt
    - coinsAmt
    - notCovAmt
    - provName
    - RowNum
    - copayAmt
    - clmStatus
    - paidAmt
    - otherInsurance
    - recDt
    - intClmNum
    - serviceType
    - subNum
    - msgSpecified
    - memFName
    - memNum
    - svcType
    - youOweAmt
    - prvSubAmt
    - statusDt
    - dedAmt
    - clmPaymtStatus
    - DOS
    - lineMsg
  GetclaimsforproviderEncryptRequest:
    title: getclaimsforproviderEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","param1":"{{clmProv}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","param1":"{{clmProv}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetclaimsforproviderOkResponse:
    title: getclaimsforprovider ok response
    example:
      ROWSET:
        ROWS:
          lastDOS: 12/09/2015
          provName: VERNICK AND GOPALLLC
          isDependent: false
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 12/09/2015
          intClmNum: 26153490527900
          subNum: 0015880090000
          memFName: Sadegh
          memNum: 0015880090000000
          memDOB: 09/10/1987
          svcType: Medical
          youOweAmt: 0
          memLName: Dabiricde
          DOS: 12/09/2015
          billedAmt: 325
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET132'
    required:
    - ROWSET
  ROWSET132:
    title: ROWSET132
    example:
      ROWS:
        lastDOS: 12/09/2015
        provName: VERNICK AND GOPALLLC
        isDependent: false
        clm_paymt_stat: Paid
        clmStatus: Complete
        firstDOS: 12/09/2015
        intClmNum: 26153490527900
        subNum: 0015880090000
        memFName: Sadegh
        memNum: 0015880090000000
        memDOB: 09/10/1987
        svcType: Medical
        youOweAmt: 0
        memLName: Dabiricde
        DOS: 12/09/2015
        billedAmt: 325
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS133'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS133:
    title: ROWS133
    example:
      lastDOS: 12/09/2015
      provName: VERNICK AND GOPALLLC
      isDependent: false
      clm_paymt_stat: Paid
      clmStatus: Complete
      firstDOS: 12/09/2015
      intClmNum: 26153490527900
      subNum: 0015880090000
      memFName: Sadegh
      memNum: 0015880090000000
      memDOB: 09/10/1987
      svcType: Medical
      youOweAmt: 0
      memLName: Dabiricde
      DOS: 12/09/2015
      billedAmt: 325
    type: object
    properties:
      lastDOS:
        description: ''
        example: 12/09/2015
        type: string
      provName:
        description: ''
        example: VERNICK AND GOPALLLC
        type: string
      isDependent:
        description: ''
        example: false
        type: boolean
      clm_paymt_stat:
        description: ''
        example: Paid
        type: string
      clmStatus:
        description: ''
        example: Complete
        type: string
      firstDOS:
        description: ''
        example: 12/09/2015
        type: string
      intClmNum:
        description: ''
        example: 26153490527900
        type: integer
        format: int64
      subNum:
        description: ''
        example: 0015880090000
        type: string
      memFName:
        description: ''
        example: Sadegh
        type: string
      memNum:
        description: ''
        example: 0015880090000000
        type: string
      memDOB:
        description: ''
        example: 09/10/1987
        type: string
      svcType:
        description: ''
        example: Medical
        type: string
      youOweAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      memLName:
        description: ''
        example: Dabiricde
        type: string
      DOS:
        description: ''
        example: 12/09/2015
        type: string
      billedAmt:
        description: ''
        example: 325
        type: integer
        format: int32
    required:
    - lastDOS
    - provName
    - isDependent
    - clm_paymt_stat
    - clmStatus
    - firstDOS
    - intClmNum
    - subNum
    - memFName
    - memNum
    - memDOB
    - svcType
    - youOweAmt
    - memLName
    - DOS
    - billedAmt
  GetdepclaimsEncryptRequest:
    title: getdepclaimsEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetdepclaimsOkResponse:
    title: getdepclaims ok response
    example:
      ROWSET:
        ROWS:
          lastDOS: 10/28/2015
          provName: LAWRENCE C RUSIN MD
          isDependent: true
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 10/28/2015
          intClmNum: 26160740416000
          subNum: 0016703370000
          memFName: Ambrose
          memNum: 0016703370000010
          memDOB: 08/09/2002
          svcType: Medical
          youOweAmt: 20
          memLName: Jeri
          DOS: 10/28/2015
          billedAmt: 178
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET132'
    required:
    - ROWSET
  GetdepclaimsfordaterangeEncryptRequest:
    title: getdepclaimsfordaterangeEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}","param1":"01/01/2015","param2":"12/01/2017"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}","param1":"01/01/2015","param2":"12/01/2017"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetdepclaimsfordaterangeOkResponse:
    title: getdepclaimsfordaterange ok response
    example:
      ROWSET:
        ROWS:
          lastDOS: 10/28/2015
          provName: LAWRENCE C RUSIN MD
          isDependent: true
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 10/28/2015
          intClmNum: 26160740416000
          subNum: 0016703370000
          memFName: Ambrose
          memNum: 0016703370000010
          memDOB: 08/09/2002
          svcType: Medical
          youOweAmt: 20
          memLName: Jeri
          DOS: 10/28/2015
          billedAmt: 178
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET132'
    required:
    - ROWSET
  GetdepclaimsforICNEncryptRequest:
    title: getdepclaimsforICNEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}","param1":"{{clmICN}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}","param1":"{{clmICN}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetdepclaimsforicnOkResponse:
    title: getdepclaimsforICN ok response
    example:
      ROWSET:
        ROWS:
          alldAmt: 76.790000000000006
          coinsAmt: 0
          notCovAmt: 0
          provName: LAWRENCE C RUSIN MD
          RowNum: 1
          copayAmt: 20
          clmStatus: Complete
          paidAmt: 56.789999999999999
          recDt: 11/01/2015
          intClmNum: 26160740416000
          serviceType: Medical
          subNum: 0016703370000
          msgSpecified: true
          memFName: Ambrose
          memNum: 0016703370000010
          svcType: Medical Care
          youOweAmt: 20
          prvSubAmt: 178
          statusDt: 11/02/2015
          dedAmt: 0
          clmPaymtStatus: Paid
          DOS: 10/28/2015
          lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET148'
    required:
    - ROWSET
  ROWSET148:
    title: ROWSET148
    example:
      ROWS:
        alldAmt: 76.790000000000006
        coinsAmt: 0
        notCovAmt: 0
        provName: LAWRENCE C RUSIN MD
        RowNum: 1
        copayAmt: 20
        clmStatus: Complete
        paidAmt: 56.789999999999999
        recDt: 11/01/2015
        intClmNum: 26160740416000
        serviceType: Medical
        subNum: 0016703370000
        msgSpecified: true
        memFName: Ambrose
        memNum: 0016703370000010
        svcType: Medical Care
        youOweAmt: 20
        prvSubAmt: 178
        statusDt: 11/02/2015
        dedAmt: 0
        clmPaymtStatus: Paid
        DOS: 10/28/2015
        lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS149'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS149:
    title: ROWS149
    example:
      alldAmt: 76.790000000000006
      coinsAmt: 0
      notCovAmt: 0
      provName: LAWRENCE C RUSIN MD
      RowNum: 1
      copayAmt: 20
      clmStatus: Complete
      paidAmt: 56.789999999999999
      recDt: 11/01/2015
      intClmNum: 26160740416000
      serviceType: Medical
      subNum: 0016703370000
      msgSpecified: true
      memFName: Ambrose
      memNum: 0016703370000010
      svcType: Medical Care
      youOweAmt: 20
      prvSubAmt: 178
      statusDt: 11/02/2015
      dedAmt: 0
      clmPaymtStatus: Paid
      DOS: 10/28/2015
      lineMsg: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
    type: object
    properties:
      alldAmt:
        description: ''
        example: 76.790000000000006
        type: number
        format: double
      coinsAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      notCovAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      provName:
        description: ''
        example: LAWRENCE C RUSIN MD
        type: string
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      copayAmt:
        description: ''
        example: 20
        type: integer
        format: int32
      clmStatus:
        description: ''
        example: Complete
        type: string
      paidAmt:
        description: ''
        example: 56.789999999999999
        type: number
        format: double
      recDt:
        description: ''
        example: 11/01/2015
        type: string
      intClmNum:
        description: ''
        example: 26160740416000
        type: integer
        format: int64
      serviceType:
        description: ''
        example: Medical
        type: string
      subNum:
        description: ''
        example: 0016703370000
        type: string
      msgSpecified:
        description: ''
        example: true
        type: boolean
      memFName:
        description: ''
        example: Ambrose
        type: string
      memNum:
        description: ''
        example: 0016703370000010
        type: string
      svcType:
        description: ''
        example: Medical Care
        type: string
      youOweAmt:
        description: ''
        example: 20
        type: integer
        format: int32
      prvSubAmt:
        description: ''
        example: 178
        type: integer
        format: int32
      statusDt:
        description: ''
        example: 11/02/2015
        type: string
      dedAmt:
        description: ''
        example: 0
        type: integer
        format: int32
      clmPaymtStatus:
        description: ''
        example: Paid
        type: string
      DOS:
        description: ''
        example: 10/28/2015
        type: string
      lineMsg:
        description: ''
        example: BENEFITS FOR THIS SERVICE ARE BASED ON A FEE SCHEDULE AND THE MAXIMUM REIMBURSABLE ALLOWANCE FOR THIS BENEFIT HAS BEEN PROVIDED. YOU ARE ONLY RESPONSIBLE FOR ANY COINSURANCE, DEDUCTIBLE ORCOPAYMENT. /P017/
        type: string
    required:
    - alldAmt
    - coinsAmt
    - notCovAmt
    - provName
    - RowNum
    - copayAmt
    - clmStatus
    - paidAmt
    - recDt
    - intClmNum
    - serviceType
    - subNum
    - msgSpecified
    - memFName
    - memNum
    - svcType
    - youOweAmt
    - prvSubAmt
    - statusDt
    - dedAmt
    - clmPaymtStatus
    - DOS
    - lineMsg
  GetdepclaimsforproviderEncryptRequest:
    title: getdepclaimsforproviderEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}","param1":"{{clmProv}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}","param1":"{{clmProv}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetdepclaimsforproviderOkResponse:
    title: getdepclaimsforprovider ok response
    example:
      ROWSET:
        ROWS:
          lastDOS: 10/28/2015
          provName: LAWRENCE C RUSIN MD
          isDependent: true
          clm_paymt_stat: Paid
          clmStatus: Complete
          firstDOS: 10/28/2015
          intClmNum: 26160740416000
          subNum: 0016703370000
          memFName: Ambrose
          memNum: 0016703370000010
          memDOB: 08/09/2002
          svcType: Medical
          youOweAmt: 20
          memLName: Jeri
          DOS: 10/28/2015
          billedAmt: 178
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET132'
    required:
    - ROWSET
  DepmeminfoEncryptRequest:
    title: depmeminfoEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","key2id":"{{Ekey2id}}","depid":"{{depID}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  GetdepcardfrontOkResponse:
    title: getdepcardfront ok response
    example:
      ROWSET:
        ROWS:
          PCPPh: 978-287-9300
          nurseLine: 1-888-247-2583
          RowNum: 1
          CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
          isDependent: true
          hasHEQ: false
          hasALG: false
          BHCopay: 25
          dispSuitcase: true
          PCPState: MA
          rxBin: 'RxBin: 003858 PCN: A4'
          PCPZip: 1742
          MemName: AMBROSE JERI
          ERCopay: 100
          MemServPh: 1-800-238-6616
          PCPSpecified: true
          PCPStreet: 330 BAKER AVE
          cardMemID: XXH001670337
          ProdDesc: BLUE CHOICE PLAN 2
          OvCopay: 25
          hasFAD: true
          PCPName: ANTHONY LOPEZ
          rxSpecified: true
          addressStr: 330 BAKER AVE, CONCORD MA 01742
          PCPCity: CONCORD
          FADNetID: 311005011
          rxGRP: 'RxGRP: MASA'
          PrevCopay: 0
          hasDependents: false
          MemSuff: 10
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET160'
    required:
    - ROWSET
  ROWSET160:
    title: ROWSET160
    example:
      ROWS:
        PCPPh: 978-287-9300
        nurseLine: 1-888-247-2583
        RowNum: 1
        CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        isDependent: true
        hasHEQ: false
        hasALG: false
        BHCopay: 25
        dispSuitcase: true
        PCPState: MA
        rxBin: 'RxBin: 003858 PCN: A4'
        PCPZip: 1742
        MemName: AMBROSE JERI
        ERCopay: 100
        MemServPh: 1-800-238-6616
        PCPSpecified: true
        PCPStreet: 330 BAKER AVE
        cardMemID: XXH001670337
        ProdDesc: BLUE CHOICE PLAN 2
        OvCopay: 25
        hasFAD: true
        PCPName: ANTHONY LOPEZ
        rxSpecified: true
        addressStr: 330 BAKER AVE, CONCORD MA 01742
        PCPCity: CONCORD
        FADNetID: 311005011
        rxGRP: 'RxGRP: MASA'
        PrevCopay: 0
        hasDependents: false
        MemSuff: 10
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS161'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS161:
    title: ROWS161
    example:
      PCPPh: 978-287-9300
      nurseLine: 1-888-247-2583
      RowNum: 1
      CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
      isDependent: true
      hasHEQ: false
      hasALG: false
      BHCopay: 25
      dispSuitcase: true
      PCPState: MA
      rxBin: 'RxBin: 003858 PCN: A4'
      PCPZip: 1742
      MemName: AMBROSE JERI
      ERCopay: 100
      MemServPh: 1-800-238-6616
      PCPSpecified: true
      PCPStreet: 330 BAKER AVE
      cardMemID: XXH001670337
      ProdDesc: BLUE CHOICE PLAN 2
      OvCopay: 25
      hasFAD: true
      PCPName: ANTHONY LOPEZ
      rxSpecified: true
      addressStr: 330 BAKER AVE, CONCORD MA 01742
      PCPCity: CONCORD
      FADNetID: 311005011
      rxGRP: 'RxGRP: MASA'
      PrevCopay: 0
      hasDependents: false
      MemSuff: 10
    type: object
    properties:
      PCPPh:
        description: ''
        example: 978-287-9300
        type: string
      nurseLine:
        description: ''
        example: 1-888-247-2583
        type: string
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      CopayInfo:
        description: ''
        example: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        type: string
      isDependent:
        description: ''
        example: true
        type: boolean
      hasHEQ:
        description: ''
        example: false
        type: boolean
      hasALG:
        description: ''
        example: false
        type: boolean
      BHCopay:
        description: ''
        example: 25
        type: integer
        format: int32
      dispSuitcase:
        description: ''
        example: true
        type: boolean
      PCPState:
        description: ''
        example: MA
        type: string
      rxBin:
        description: ''
        example: 'RxBin: 003858 PCN: A4'
        type: string
      PCPZip:
        description: ''
        example: 1742
        type: integer
        format: int32
      MemName:
        description: ''
        example: AMBROSE JERI
        type: string
      ERCopay:
        description: ''
        example: 100
        type: integer
        format: int32
      MemServPh:
        description: ''
        example: 1-800-238-6616
        type: string
      PCPSpecified:
        description: ''
        example: true
        type: boolean
      PCPStreet:
        description: ''
        example: 330 BAKER AVE
        type: string
      cardMemID:
        description: ''
        example: XXH001670337
        type: string
      ProdDesc:
        description: ''
        example: BLUE CHOICE PLAN 2
        type: string
      OvCopay:
        description: ''
        example: 25
        type: integer
        format: int32
      hasFAD:
        description: ''
        example: true
        type: boolean
      PCPName:
        description: ''
        example: ANTHONY LOPEZ
        type: string
      rxSpecified:
        description: ''
        example: true
        type: boolean
      addressStr:
        description: ''
        example: 330 BAKER AVE, CONCORD MA 01742
        type: string
      PCPCity:
        description: ''
        example: CONCORD
        type: string
      FADNetID:
        description: ''
        example: 311005011
        type: integer
        format: int32
      rxGRP:
        description: ''
        example: 'RxGRP: MASA'
        type: string
      PrevCopay:
        description: ''
        example: 0
        type: integer
        format: int32
      hasDependents:
        description: ''
        example: false
        type: boolean
      MemSuff:
        description: ''
        example: 10
        type: integer
        format: int32
    required:
    - PCPPh
    - nurseLine
    - RowNum
    - CopayInfo
    - isDependent
    - hasHEQ
    - hasALG
    - BHCopay
    - dispSuitcase
    - PCPState
    - rxBin
    - PCPZip
    - MemName
    - ERCopay
    - MemServPh
    - PCPSpecified
    - PCPStreet
    - cardMemID
    - ProdDesc
    - OvCopay
    - hasFAD
    - PCPName
    - rxSpecified
    - addressStr
    - PCPCity
    - FADNetID
    - rxGRP
    - PrevCopay
    - hasDependents
    - MemSuff
  GetdepcardbackOkResponse:
    title: getdepcardback ok response
    example:
      ROWSET:
        ROWS:
        - RowNum: 1
          CopyLoc: Top
          Copy: www.bluecrossma.com
        - RowNum: 2
          CopyLoc: Para1
          Copy: 'Routine or Urgent Care: Contact your PCP. Emergencies: seek emergency care or call 911 or call the local emergency telephone number. Call your PCP within 48 hours.'
        - RowNum: 3
          CopyLoc: Para2
          Copy: This card is for identification only. It is not proof of membership, nor does it guarantee coverage.
        - RowNum: 4
          CopyLoc: Para3
          Copy: 'To the Provider: submit claims to the Blue Cross and/or Blue Shield Plan servicing your area. Be sure to include the three-letter prefix followed by the nine-digit number.'
        - RowNum: 5
          CopyLoc: Para4
          Copy: Member Service:1-800-238-6616|Provider Service:1-800-443-6657|Blue Care Line:1-888-247-2583|Behavioral Health & Substance Abuse:1-800-444-2426
        - RowNum: 6
          CopyLoc: Para5
          Copy: Blue Cross and Blue Shield of Massachusetts, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. administers claims payment only and does not assume financial risk for claims.
        - RowNum: 7
          CopyLoc: Bottom
          Copy: Express Scripts, Inc. Pharmacy benefits administrator
        totRows: 7
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET67'
    required:
    - ROWSET
  GetdeprecentvisitsOkResponse:
    title: getdeprecentvisits ok response
    example:
      ROWSET:
        ROWS:
        - RowNum: 1
          PrvState: MA
          PrvPh: 413-395-7580
          IsPCP: false
          PrvType: Physician
          PrvName: JEFFREY LEPPO MD
          PrvSpec: Cardiovascular Disease
          PrvCity: Pittsfield
          addressStr: 41 WACONAH ST, PITTSFIELD MA 01201
          DOS: 01/12/14
          PrvZip: 1201
          hasAddress: true
          PrvStreet: 41 Waconah St
        - RowNum: 4
          PrvState: MA
          PrvPh: 413-447-2451
          IsPCP: false
          PrvType: Physician
          PrvName: MAZEN GHANI MD
          PrvSpec: Radiology
          PrvCity: Pittsfield
          addressStr: 725 NORTH ST, PITTSFIELD MA 01201
          DOS: 01/12/14
          PrvZip: 1201
          hasAddress: true
          PrvStreet: 725 North St
        - RowNum: 2
          PrvState: MA
          PrvPh: 413-445-4565
          IsPCP: false
          PrvType: Physician
          PrvName: GREGORY D SHOULDICE MD
          PrvSpec: Ophthalmology
          PrvCity: Pittsfield
          addressStr: 740 WILLIAMS ST, PITTSFIELD MA 01201
          DOS: 09/30/13
          PrvZip: 1201
          hasAddress: true
          PrvStreet: 740 Williams St
        - RowNum: 3
          PrvState: MA
          PrvPh: 413-499-2054
          IsPCP: true
          PrvType: Physician
          PrvName: CHRISTOPHER TRANCYNGER MD
          PrvSpec: Internal Medicine
          PrvCity: Pittsfield
          addressStr: 631B NORTH ST, PITTSFIELD MA 01201
          DOS: 07/24/13
          PrvZip: 1201
          hasAddress: true
          PrvStreet: 631b North St
        - RowNum: 5
          PrvState: MA
          PrvPh: 413-447-7622
          IsPCP: false
          PrvType: Dentist
          PrvName: EDWIN J HELITZER DMD
          PrvSpec: General Dentist
          PrvCity: Pittsfield
          addressStr: 195 SOUTH ST STE 2, PITTSFIELD MA 01201
          DOS: 06/07/13
          PrvZip: 1201
          hasAddress: true
          PrvStreet: 195 South St Ste 2
        totRows: 5
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET85'
    required:
    - ROWSET
  GetdeprecentrxOkResponse:
    title: getdeprecentrx ok response
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET88'
    required:
    - ROWSET
  GetdepmemberinfoOkResponse:
    title: getdepmemberinfo ok response
    example:
      ROWSET:
        ROWS:
          lastLoginDt: 10/05/2017
          RowNum: 1
          visitPrvName: JEFFREY LEPPO MD
          rxStrength: 0.3-0
          memFistName: Ambrose
          rxNSDC: 00065853302
          rxDispPrvState: MA
          visitZip: 1201
          rxDispPrvCity: PITTSFIELD
          visitPrvNum: 70010000E05256
          sythID: 3BA384290E4AEACFE41E59D423BFFD0FA78DE48B
          clmSrvType: Medical
          visitSvcDt: 01/12/2014
          rxPrescPrvName: CHURYLA ALESIA MD
          visitPhone: 413-395-7580
          rxDrug: Ciprofloxacin-Dexamethasone Otic Susp 0.3-0.1%
          rxPrescPrvNum: 70010000J47687
          clmPrvName: LAWRENCE C RUSIN MD
          visitStreet: 41 WACONAH ST
          clmPaidAmt: 56.789999999999999
          clmStatus: Complete
          visitState: MA
          clmICN: 26160740416000
          numOfClmsSinceLastLogin: 0
          clmAllowAmt: 76.790000000000006
          rxDispPrvZip: 1201
          rxPrescPhone: 413-499-2054
          rxDispPrvPhone: 413-499-5411
          clmDOS: 10/28/2015
          visitCity: PITTSFIELD
          rxDispDt: 01/06/2011
          rxDispPrvNum: 70010002233043
          memMidInit: B
          memGender: F
          rxDispPrvStreet: 501 NORTH ST
          rxDispPrvName: RITE AID
          memLastName: Jeri
          clmPaymtStatus: Paid
          hasDependents: false
          visitSpec: CARDIOVASCULAR DISEASE
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET73'
    required:
    - ROWSET
  GetdeplimitedplaninfoOkResponse:
    title: getdeplimitedplaninfo ok response
    example:
      ROWSET:
        ROWS:
          ProdDesc: BLUE CHOICE PLAN 2
          OvCopay: 25
          nurseLine: 1-888-247-2583
          hasFAD: true
          RowNum: 1
          CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
          acctNum: 4956444
          BHCopay: 25
          rxBin: 'RxBin: 003858 PCN: A4'
          hasRxBenefit: true
          planModel: true
          FADNetID: 311005011
          rxGRP: 'RxGRP: MASA'
          hasBHBenefit: true
          ERCopay: 100
          MemServPh: 1-800-238-6616
          hasDependents: false
          grpNum: 004035141
          preventCopay: 0
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET175'
    required:
    - ROWSET
  ROWSET175:
    title: ROWSET175
    example:
      ROWS:
        ProdDesc: BLUE CHOICE PLAN 2
        OvCopay: 25
        nurseLine: 1-888-247-2583
        hasFAD: true
        RowNum: 1
        CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        acctNum: 4956444
        BHCopay: 25
        rxBin: 'RxBin: 003858 PCN: A4'
        hasRxBenefit: true
        planModel: true
        FADNetID: 311005011
        rxGRP: 'RxGRP: MASA'
        hasBHBenefit: true
        ERCopay: 100
        MemServPh: 1-800-238-6616
        hasDependents: false
        grpNum: 004035141
        preventCopay: 0
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS176'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS176:
    title: ROWS176
    example:
      ProdDesc: BLUE CHOICE PLAN 2
      OvCopay: 25
      nurseLine: 1-888-247-2583
      hasFAD: true
      RowNum: 1
      CopayInfo: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
      acctNum: 4956444
      BHCopay: 25
      rxBin: 'RxBin: 003858 PCN: A4'
      hasRxBenefit: true
      planModel: true
      FADNetID: 311005011
      rxGRP: 'RxGRP: MASA'
      hasBHBenefit: true
      ERCopay: 100
      MemServPh: 1-800-238-6616
      hasDependents: false
      grpNum: 004035141
      preventCopay: 0
    type: object
    properties:
      ProdDesc:
        description: ''
        example: BLUE CHOICE PLAN 2
        type: string
      OvCopay:
        description: ''
        example: 25
        type: integer
        format: int32
      nurseLine:
        description: ''
        example: 1-888-247-2583
        type: string
      hasFAD:
        description: ''
        example: true
        type: boolean
      RowNum:
        description: ''
        example: 1
        type: integer
        format: int32
      CopayInfo:
        description: ''
        example: Refer to your explanation of benefits or go to bluecrossma.com and select Review My Benefits for service level copayment information.
        type: string
      acctNum:
        description: ''
        example: 4956444
        type: integer
        format: int32
      BHCopay:
        description: ''
        example: 25
        type: integer
        format: int32
      rxBin:
        description: ''
        example: 'RxBin: 003858 PCN: A4'
        type: string
      hasRxBenefit:
        description: ''
        example: true
        type: boolean
      planModel:
        description: ''
        example: true
        type: boolean
      FADNetID:
        description: ''
        example: 311005011
        type: integer
        format: int32
      rxGRP:
        description: ''
        example: 'RxGRP: MASA'
        type: string
      hasBHBenefit:
        description: ''
        example: true
        type: boolean
      ERCopay:
        description: ''
        example: 100
        type: integer
        format: int32
      MemServPh:
        description: ''
        example: 1-800-238-6616
        type: string
      hasDependents:
        description: ''
        example: false
        type: boolean
      grpNum:
        description: ''
        example: 004035141
        type: string
      preventCopay:
        description: ''
        example: 0
        type: integer
        format: int32
    required:
    - ProdDesc
    - OvCopay
    - nurseLine
    - hasFAD
    - RowNum
    - CopayInfo
    - acctNum
    - BHCopay
    - rxBin
    - hasRxBenefit
    - planModel
    - FADNetID
    - rxGRP
    - hasBHBenefit
    - ERCopay
    - MemServPh
    - hasDependents
    - grpNum
    - preventCopay
  InfoDecrypt:
    title: infoDecrypt
    example:
      message: ''
      result: -1
      errormessage: NO KEY FOUND FOR KEY ID-c54b2f56a6794e7d915775fb2c60fcc3 KEY TYPE-RESP GET_KEY_FOR_ID_SALTED_PR
      displaymessage: SYSTEM ERROR - GET_KEY_FOR_ID_SALTED_PR
      key2value: 
    type: object
    properties:
      message:
        description: ''
        type: string
      result:
        description: ''
        example: -1
        type: string
      errormessage:
        description: ''
        example: NO KEY FOUND FOR KEY ID-c54b2f56a6794e7d915775fb2c60fcc3 KEY TYPE-RESP GET_KEY_FOR_ID_SALTED_PR
        type: string
      displaymessage:
        description: ''
        example: SYSTEM ERROR - GET_KEY_FOR_ID_SALTED_PR
        type: string
      key2value:
        description: ''
    required:
    - message
    - result
    - errormessage
    - displaymessage
    - key2value
  UpdatememprofileEncryptRequest:
    title: updatememprofileEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","passwordin":"{{password}}","memobject":[{"memkeyname":"weight","memkeyvalue":"150"},{"memkeyname":"shoesize","memkeyvalue":"9.5"},{"memkeyname":"swrveid","memkeyvalue":"Z93klskd3ADFEFH92"}],"key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","passwordin":"{{password}}","memobject":[{"memkeyname":"weight","memkeyvalue":"150"},{"memkeyname":"shoesize","memkeyvalue":"9.5"},{"memkeyname":"swrveid","memkeyvalue":"Z93klskd3ADFEFH92"}],"key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  UpdatememprofileOkResponse:
    title: updatememprofile ok response
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  GetmemprofileExampleResponse:
    title: getmemprofile example response
    example:
      ROWSET:
        ROWS:
          usr_swrveid_a93klskd392kfh92: a93klskd392KFH92
          usr_shoesize: 9.5
          source: usr
          usr_weight: 150
          usr_swrveid_z93klskd3adfefh92: Z93klskd3ADFEFH92
          usr_lastlogin: 01/23/2018
          usr_swrveid_4938539238andcfk: 4938539238andcfk
          usr_prevlogin: 01/08/2018
        totRows: 1
    type: object
    properties:
      ROWSET:
        $ref: '#/definitions/ROWSET186'
    required:
    - ROWSET
  ROWSET186:
    title: ROWSET186
    example:
      ROWS:
        usr_swrveid_a93klskd392kfh92: a93klskd392KFH92
        usr_shoesize: 9.5
        source: usr
        usr_weight: 150
        usr_swrveid_z93klskd3adfefh92: Z93klskd3ADFEFH92
        usr_lastlogin: 01/23/2018
        usr_swrveid_4938539238andcfk: 4938539238andcfk
        usr_prevlogin: 01/08/2018
      totRows: 1
    type: object
    properties:
      ROWS:
        $ref: '#/definitions/ROWS187'
      totRows:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - ROWS
    - totRows
  ROWS187:
    title: ROWS187
    example:
      usr_swrveid_a93klskd392kfh92: a93klskd392KFH92
      usr_shoesize: 9.5
      source: usr
      usr_weight: 150
      usr_swrveid_z93klskd3adfefh92: Z93klskd3ADFEFH92
      usr_lastlogin: 01/23/2018
      usr_swrveid_4938539238andcfk: 4938539238andcfk
      usr_prevlogin: 01/08/2018
    type: object
    properties:
      usr_swrveid_a93klskd392kfh92:
        description: ''
        example: a93klskd392KFH92
        type: string
      usr_shoesize:
        description: ''
        example: 9.5
        type: number
        format: double
      source:
        description: ''
        example: usr
        type: string
      usr_weight:
        description: ''
        example: 150
        type: integer
        format: int32
      usr_swrveid_z93klskd3adfefh92:
        description: ''
        example: Z93klskd3ADFEFH92
        type: string
      usr_lastlogin:
        description: ''
        example: 01/23/2018
        type: string
      usr_swrveid_4938539238andcfk:
        description: ''
        example: 4938539238andcfk
        type: string
      usr_prevlogin:
        description: ''
        example: 01/08/2018
        type: string
    required:
    - usr_swrveid_a93klskd392kfh92
    - usr_shoesize
    - source
    - usr_weight
    - usr_swrveid_z93klskd3adfefh92
    - usr_lastlogin
    - usr_swrveid_4938539238andcfk
    - usr_prevlogin
  UpdatemempreferenceEncryptRequest:
    title: updatemempreferenceEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","passwordin":"{{password}}","memobject":[{"memkeyname":"eobviaemail","memkeyvalue":"No"},{"memkeyname":"besttimetocall","memkeyvalue":"Never"}],"key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","passwordin":"{{password}}","memobject":[{"memkeyname":"eobviaemail","memkeyvalue":"No"},{"memkeyname":"besttimetocall","memkeyvalue":"Never"}],"key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  UpdatemempreferenceOkResponse:
    title: updatemempreference ok response
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  VerifyuserEncryptRequest:
    title: verifyuserEncryptRequest
    example:
      mesg: '{"mobilenum":"{{mobilenum}}","email":"{{emailaddress}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"mobilenum":"{{mobilenum}}","email":"{{emailaddress}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  Verifyfunuser:
    title: verifyfunuser
    example:
      result: 0
      errormessage: 
      displaymessage: 
      isauthenticated: FALSE
      regtype: MOBILE
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
      isauthenticated:
        description: ''
        example: FALSE
        type: string
      regtype:
        description: ''
        example: MOBILE
        type: string
    required:
    - result
    - errormessage
    - displaymessage
    - isauthenticated
    - regtype
  VerifyfunauthuserEncryptRequest:
    title: verifyfunauthuserEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","dob":"{{dobin}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","dob":"{{dobin}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  Verifyfunauthuser:
    title: verifyfunauthuser
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  Verifyuser:
    title: verifyuser
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  Verifyresetaccesscode:
    title: verifyresetaccesscode
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
  ResetPasswordEncryptRequest:
    title: resetPasswordEncryptRequest
    example:
      mesg: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
      key1id: '{{Ekey1id}}'
    type: object
    properties:
      mesg:
        description: ''
        example: '{"useridin":"{{userid}}","passwordin":"{{password}}","key2id":"{{Ekey2id}}"}'
        type: string
      key1id:
        description: ''
        example: '{{Ekey1id}}'
        type: string
    required:
    - mesg
    - key1id
  Resetpassword:
    title: resetpassword
    example:
      result: 0
      errormessage: 
      displaymessage: 
    type: object
    properties:
      result:
        description: ''
        example: 0
        type: string
      errormessage:
        description: ''
      displaymessage:
        description: ''
    required:
    - result
    - errormessage
    - displaymessage
